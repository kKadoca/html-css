%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 1505.m00.i004.n011.S.c13.132272738 Vector Cats.eps
%%Creator: Adobe Illustrator(R) 17.1
%%For: Iana
%%CreationDate: 24.05.15
%%BoundingBox: 0 0 371 371
%%HiResBoundingBox: 0 0 370.9239 370.3380
%%CropBox: 0 0 370.9239 370.3380
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.1.0 x273 R agm 4.7709 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">SHABLON</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2015-05-24T19:18:12+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-05-24T19:18:12+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-24T19:18:12+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qxTVfzR8k6V5207yV&#xA;e6gI/MGpryt7fiSoLV9NZJPsq0nE8Aev0iqrK8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVYn+bOgjX/AMtPM2k7l7jT5zDT/fsSGWL/AJKIuKvPf+cS/PepeZvy6msNUuGub7Qbn6qk0hLO&#xA;1q6B4ebHclTzQf5KjFXt2KuxV2KuxV2KuxV2KsS/ML80fKfkCDTrnzJLLDbalcG2imijMoQhC5eQ&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:542fa185-f3c8-4c2d-baf5-8ea5e2ded7e2</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:542fa185-f3c8-4c2d-baf5-8ea5e2ded7e2</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D07F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:10+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T14:51:08-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T15:15:38-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0CC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:07:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:03E540664A3DDD11BD33D3EB8D3A1068</stEvt:instanceID>
                  <stEvt:when>2008-06-18T22:24:35+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6D6AE2A5723EDD11A6F1BABF7C5A7A51</stEvt:instanceID>
                  <stEvt:when>2008-06-19T20:31:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F658EEB6F62AE311A780D694AE8E2902</stEvt:instanceID>
                  <stEvt:when>2013-10-02T22:27:11+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bbd1bb41-bdbf-4c0b-ae7c-6422c2136517</stEvt:instanceID>
                  <stEvt:when>2014-04-02T10:20:14+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d2b1cd72-579c-4a13-8b83-b2d42802a9d9</stEvt:instanceID>
                  <stEvt:when>2014-04-26T20:35:23+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4f2ff325-8c9e-4127-974b-690eafd24bbf</stEvt:instanceID>
                  <stEvt:when>2014-04-27T20:47:41+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:279ef6dd-b373-41dc-ad5d-3b450d1663fe</stEvt:instanceID>
                  <stEvt:when>2014-04-28T14:19:22+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2636de9b-11f4-40b7-9942-5af2defd84ae</stEvt:instanceID>
                  <stEvt:when>2014-05-11T23:18:14+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e3c42754-0ada-4e36-a629-74e6c60b9b00</stEvt:instanceID>
                  <stEvt:when>2014-05-12T12:20:25+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:12e5d5de-7677-44bf-8e28-ba80fbb25ba0</stEvt:instanceID>
                  <stEvt:when>2014-05-17T21:43+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2b8ab455-e61c-45db-a51a-6d395cd91357</stEvt:instanceID>
                  <stEvt:when>2014-05-17T22:30:22+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:30435c9b-a1be-4669-9ed9-088ae3f3aa67</stEvt:instanceID>
                  <stEvt:when>2014-05-19T13:57:14+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c3aea365-ebdb-43c1-b1c0-4f65534a15d3</stEvt:instanceID>
                  <stEvt:when>2014-05-20T21:26:09+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2c4537d3-5b5c-40d2-838f-1f0cec971438</stEvt:instanceID>
                  <stEvt:when>2014-05-21T14:12:14+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a8c012fa-9f6e-42cf-a1bf-d89ba9d28678</stEvt:instanceID>
                  <stEvt:when>2014-05-27T12:20:05+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8d53041b-bcb7-4185-9eea-7f293f3df7c8</stEvt:instanceID>
                  <stEvt:when>2014-05-27T12:38:58+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f3b58f3b-c7eb-4683-b3f4-f1e25deb11f2</stEvt:instanceID>
                  <stEvt:when>2014-05-30T17:12:19+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:98cfc885-dc94-4222-9585-188aedeaefe2</stEvt:instanceID>
                  <stEvt:when>2014-05-31T00:45:31+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a9caa970-ed2f-44ce-bfb9-c4cfbe030e36</stEvt:instanceID>
                  <stEvt:when>2014-06-10T20:24:40+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ec963ddb-541c-4aa6-9b41-11726c2d61ae</stEvt:instanceID>
                  <stEvt:when>2014-06-15T13:33:24+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ac853a94-a300-45a7-ad99-bd1a09648a73</stEvt:instanceID>
                  <stEvt:when>2014-06-15T18:05:34+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7feb5f5a-60eb-4cde-99eb-aee6ca9469dc</stEvt:instanceID>
                  <stEvt:when>2014-06-16T15:53:35+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:657c84eb-9400-4bef-89cf-7ec006c89018</stEvt:instanceID>
                  <stEvt:when>2014-06-24T19:25:10+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:85e6e636-2458-494c-a9b7-59baf55b1fc0</stEvt:instanceID>
                  <stEvt:when>2014-06-25T21:48:04+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:048626d4-6c2c-49ab-82f8-ebb74448f2fe</stEvt:instanceID>
                  <stEvt:when>2014-07-18T01:31:48+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1cfe95b1-c8af-4ed9-878f-91f804273ac7</stEvt:instanceID>
                  <stEvt:when>2014-07-19T01:17:57+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fb144eb7-2cf8-4d20-aa3b-dca2d95f063a</stEvt:instanceID>
                  <stEvt:when>2014-07-20T00:59:45+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c45e886c-c077-4959-88a9-20e793837a57</stEvt:instanceID>
                  <stEvt:when>2014-07-20T01:21:43+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:836c2e9d-1b24-4125-b70a-b6e12a64b174</stEvt:instanceID>
                  <stEvt:when>2014-07-20T13:27:15+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d610af6f-b924-49af-ad3e-1644fba97421</stEvt:instanceID>
                  <stEvt:when>2014-07-21T14:24:32+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d1d8967f-be65-49a0-ae45-ce74dc5824f2</stEvt:instanceID>
                  <stEvt:when>2014-08-25T13:22:29+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bdd1301e-c382-42a9-b096-d0c1d18606a5</stEvt:instanceID>
                  <stEvt:when>2014-08-25T14:58:13+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5e9357e0-bc9d-4a7f-b252-f0a3b87d5fef</stEvt:instanceID>
                  <stEvt:when>2014-08-25T16:49:57+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a20d9d79-2977-4ef0-8823-8f9d7a95aa8f</stEvt:instanceID>
                  <stEvt:when>2014-09-14T19:12:28+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ae0ecfdc-de44-4e75-82bb-dde713d9d155</stEvt:instanceID>
                  <stEvt:when>2014-09-25T18:31:10+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:26f43381-891b-4f46-bdd1-d8ce131a6508</stEvt:instanceID>
                  <stEvt:when>2014-10-05T22:50:50+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4ca1167f-40a6-40a1-b2ff-08743fccc26d</stEvt:instanceID>
                  <stEvt:when>2014-10-06T13:02:05+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4a6ad3d4-7bde-4d51-8d06-020bf024429a</stEvt:instanceID>
                  <stEvt:when>2014-10-09T00:55:15+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:985f78fb-5d6b-48cf-9498-02ae08d45581</stEvt:instanceID>
                  <stEvt:when>2014-10-09T17:44:11+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:13446674-be37-4e8c-bd9d-d2734a11c71b</stEvt:instanceID>
                  <stEvt:when>2014-10-17T00:15:31+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a349b67e-671b-48ff-ab1c-2df1bd884abc</stEvt:instanceID>
                  <stEvt:when>2014-11-18T00:12:05+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:59b99e7a-6e57-4e29-a37b-a22383f926ba</stEvt:instanceID>
                  <stEvt:when>2014-11-18T23:48:11+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d488e191-eb0a-4655-8837-5ac56e6a0470</stEvt:instanceID>
                  <stEvt:when>2014-11-18T23:54:46+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8f910d52-1e5a-4289-8851-06b7fb84b51f</stEvt:instanceID>
                  <stEvt:when>2014-12-26T22:45:17+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:af50a033-24b4-42c0-8cfe-a0e10f2f7dbb</stEvt:instanceID>
                  <stEvt:when>2014-12-28T16:09:05+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:48c192b2-03aa-4342-91ea-40633e22f649</stEvt:instanceID>
                  <stEvt:when>2015-01-10T01:15:50+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c42a2b9c-93bc-49cd-b0b1-7bce9f9c767f</stEvt:instanceID>
                  <stEvt:when>2015-01-10T15:28:25+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:08fa0057-51d7-4006-b541-9a9ee004cfbc</stEvt:instanceID>
                  <stEvt:when>2015-01-10T17:52:11+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:873b051e-fa00-4715-8749-78915916eca0</stEvt:instanceID>
                  <stEvt:when>2015-01-10T21:49:28+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fda6f3b9-6d70-4849-aac9-ff93ac92eac9</stEvt:instanceID>
                  <stEvt:when>2015-01-13T00:29:52+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8ad42f1c-82db-4aa3-99b3-3163a033ec95</stEvt:instanceID>
                  <stEvt:when>2015-01-14T15:43:40+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:86847b96-1702-4f30-a998-aec4afda72d7</stEvt:instanceID>
                  <stEvt:when>2015-01-15T02:50:11+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:67cf18ac-5b98-4d4a-b5f4-c1b11690f092</stEvt:instanceID>
                  <stEvt:when>2015-01-16T01:14:34+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3cddd68c-e81f-4a46-b6f2-76de0b8e2caa</stEvt:instanceID>
                  <stEvt:when>2015-01-27T00:32:58+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ca8cf139-71f7-41d2-8bf9-43ba35ac5659</stEvt:instanceID>
                  <stEvt:when>2015-01-27T00:53:32+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:70dfc633-359f-4ac9-ab14-63f882d3e0f6</stEvt:instanceID>
                  <stEvt:when>2015-01-27T13:43:01+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b6d40c83-edb3-4cdd-8231-4f9cb7f29bc6</stEvt:instanceID>
                  <stEvt:when>2015-04-07T11:07:32+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c03269a8-c0c3-4d3b-8378-c89bace95625</stEvt:instanceID>
                  <stEvt:when>2015-04-07T15:27:16+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7228ad7d-381f-42d9-abd0-50e520c94d23</stEvt:instanceID>
                  <stEvt:when>2015-04-07T15:27:44+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b98ec8db-2ed3-41a8-a0b6-d5a5bea7ef1b</stEvt:instanceID>
                  <stEvt:when>2015-04-19T18:23:52+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:35295d3e-c85a-45b3-8f2b-78c1cbe70a12</stEvt:instanceID>
                  <stEvt:when>2015-05-09T09:28:09+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7b752cc5-42d3-4615-81df-5b67cb66384a</stEvt:instanceID>
                  <stEvt:when>2015-05-19T16:54:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a798bf22-22cf-4acc-a197-8a2ab26b372a</stEvt:instanceID>
                  <stEvt:when>2015-05-20T13:30:16+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:38b9f37a-b128-4a75-a54e-5d0306903bda</stEvt:instanceID>
                  <stEvt:when>2015-05-20T13:59:39+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:98f4b356-7f07-4cb5-a141-61e5f35961a3</stEvt:instanceID>
                  <stEvt:when>2015-05-24T19:10:03+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:542fa185-f3c8-4c2d-baf5-8ea5e2ded7e2</stEvt:instanceID>
                  <stEvt:when>2015-05-24T19:18:12+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:98f4b356-7f07-4cb5-a141-61e5f35961a3</stRef:instanceID>
            <stRef:documentID>xmp.did:98f4b356-7f07-4cb5-a141-61e5f35961a3</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -370.338 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 370.338 li
370.924 370.338 li
370.924 0 li
cp
clp
152.711 331.667 mo
153.173 327.561 154.163 323.534 155.542 319.678 cv
156.639 316.611 157.983 313.609 158.726 310.438 cv
158.961 303.765 160.011 297.122 161.87 290.709 cv
162.152 289.736 162.47 288.744 162.908 287.829 cv
162.768 287.428 162.647 287.021 162.547 286.608 cv
162.442 286.526 162.335 286.447 162.237 286.358 cv
161.015 285.243 160.923 278.878 161.535 277.43 cv
162.755 274.539 163.999 271.607 165.964 269.161 cv
166.99 267.885 168.467 266.669 170.081 266.943 cv
171.206 267.135 172.099 268.031 172.642 269.034 cv
173.186 270.038 173.452 271.163 173.832 272.24 cv
173.832 272.241 173.833 272.242 173.833 272.243 cv
174.407 272.143 174.984 272.058 175.562 271.994 cv
176.688 271.869 177.837 271.81 178.962 271.915 cv
183.295 269.311 189.492 265.726 190.995 264.613 cv
192.609 263.418 191.373 266.227 191.042 266.982 cv
190.711 267.737 190.164 268.371 189.688 269.044 cv
188.118 271.261 187.306 273.997 187.382 276.71 cv
187.926 277.24 188.417 277.815 188.78 278.481 cv
189.587 279.963 189.68 281.717 189.736 283.404 cv
189.816 285.851 189.855 288.3 189.852 290.748 cv
189.849 292.59 189.806 294.504 188.987 296.154 cv
188.43 297.274 187.548 298.153 186.504 298.826 cv
186.792 300.827 186.825 302.919 187.194 304.911 cv
187.881 308.614 189.736 311.914 191.298 315.291 cv
194.2 321.562 196.167 328.337 197.102 335.277 cv
197.651 339.356 197.742 343.835 196.131 347.453 cv
198.785 347.144 201.45 346.973 204.111 347.165 cv
208.169 347.458 212.261 348.65 215.435 351.196 cv
216.836 352.32 218.069 353.748 218.579 355.471 cv
219.088 357.194 218.748 359.239 217.42 360.449 cv
216.076 361.675 214.096 361.816 212.279 361.893 cv
210.809 361.956 209.241 361.995 207.985 361.23 cv
206.728 360.466 206.057 358.57 207.053 357.487 cv
207.755 356.725 208.912 356.677 209.936 356.517 cv
210.959 356.358 212.139 355.834 212.257 354.805 cv
212.354 353.97 211.676 353.245 210.962 352.802 cv
209.411 351.838 207.528 351.6 205.709 351.442 cv
201.603 351.085 197.472 351.025 193.357 351.249 cv
192.026 352.416 190.438 353.244 188.779 353.791 cv
188.319 354.394 187.933 355.065 187.609 355.749 cv
186.902 357.236 186.403 358.824 185.561 360.24 cv
184.899 361.355 183.963 362.373 182.808 362.916 cv
183.182 364.079 183.142 364.993 182.26 365.82 cv
180.731 367.253 178.266 367.811 176.479 366.717 cv
174.391 365.438 174.022 362.678 174.2 360.16 cv
174.126 360.155 174.053 360.146 173.98 360.143 cv
173.963 360.885 173.944 361.626 173.924 362.365 cv
173.887 363.779 173.834 365.25 173.176 366.501 cv
172.518 367.752 169.864 367.916 168.508 367.517 cv
166.485 366.922 164.108 363.735 166.412 361.942 cv
166.523 361.855 166.62 361.755 166.718 361.656 cv
166.663 361.663 166.611 361.68 166.556 361.686 cv
165.479 361.799 164.253 361.428 163.756 360.467 cv
163.376 359.732 163.505 358.849 163.643 358.034 cv
163.91 356.46 164.177 354.887 164.444 353.313 cv
160.532 351.97 156.877 349.485 154.749 345.716 cv
152.421 341.594 152.171 336.463 152.711 331.667 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
f
188.948 284.234 mo
189.166 284.372 189.289 284.62 189.362 284.867 cv
189.57 285.568 189.442 286.37 188.991 286.945 cv
188.541 287.521 187.77 287.841 187.051 287.713 cv
186.886 287.113 186.801 286.48 186.912 285.869 cv
187.024 285.258 187.351 284.668 187.874 284.333 cv
188.194 284.128 188.627 284.031 188.948 284.234 cv
cp
.505882 .682353 .454902 rgb
f
188.809 284.167 mo
188.51 284.06 188.15 284.156 187.874 284.333 cv
187.351 284.668 187.024 285.258 186.912 285.869 cv
186.801 286.48 186.886 287.113 187.051 287.713 cv
187.577 287.806 188.131 287.66 188.567 287.349 cv
188.607 287.254 188.643 287.158 188.674 287.061 cv
188.922 286.304 188.983 285.495 188.931 284.7 cv
188.92 284.516 188.898 284.326 188.809 284.167 cv
cp
.34902 .52549 .294118 rgb
f
187.403 285.605 mo
187.432 285.423 187.483 285.234 187.614 285.105 cv
187.746 284.975 187.978 284.933 188.112 285.059 cv
188.355 285.37 188.444 285.796 188.346 286.179 cv
188.248 286.561 187.935 287.419 187.602 287.048 cv
187.27 286.676 187.327 286.092 187.403 285.605 cv
cp
.0588235 .0509804 .0509804 rgb
f
188.242 284.768 mo
188.017 284.754 187.928 284.964 187.874 285.136 cv
187.82 285.309 187.841 285.509 187.966 285.649 cv
188.091 285.788 188.419 285.539 188.485 285.328 cv
188.551 285.116 188.466 284.781 188.242 284.768 cv
cp
1 1 1 rgb
f
182.07 287.442 mo
182.07 287.442 181.794 285.614 180.624 285.562 cv
178.97 285.487 177.008 287.05 177.008 287.05 cv
177.008 287.05 178.212 289.018 179.445 289.05 cv
181.19 289.095 182.07 287.442 182.07 287.442 cv
cp
.505882 .682353 .454902 rgb
f
180.624 285.562 mo
180.05 285.536 179.438 285.707 178.885 285.942 cv
178.701 286.604 178.614 287.293 178.631 287.979 cv
178.638 288.296 178.674 288.63 178.863 288.884 cv
178.871 288.895 178.88 288.904 178.889 288.915 cv
179.071 288.995 179.258 289.045 179.445 289.05 cv
179.907 289.062 180.308 288.954 180.649 288.79 cv
180.911 288.508 181.085 288.138 181.201 287.766 cv
181.349 287.292 181.422 286.793 181.416 286.296 cv
181.415 286.168 181.406 286.037 181.378 285.912 cv
181.182 285.715 180.935 285.576 180.624 285.562 cv
cp
.34902 .52549 .294118 rgb
f
179.64 286.419 mo
179.485 286.704 179.268 287.654 179.383 287.929 cv
179.498 288.203 179.93 287.975 180.112 287.776 cv
180.294 287.577 180.369 287.305 180.427 287.041 cv
180.454 286.921 180.478 286.797 180.461 286.675 cv
180.443 286.553 180.376 286.431 180.264 286.38 cv
180.14 286.361 179.795 286.134 179.64 286.419 cv
cp
.0588235 .0509804 .0509804 rgb
f
180.386 286.93 mo
180.56 286.914 180.725 286.805 180.799 286.647 cv
180.872 286.488 180.845 286.285 180.723 286.159 cv
180.668 286.102 180.595 286.054 180.515 286.049 cv
180.141 286.023 180.109 286.335 180.063 286.464 cv
180.017 286.594 180.017 286.755 180.115 286.851 cv
180.185 286.919 180.289 286.939 180.386 286.93 cv
cp
1 1 1 rgb
f
125.952 150.723 mo
124.354 155.757 125.14 160.921 125.656 163.174 cv
125.99 164.632 127.169 165.781 128.51 166.442 cv
129.852 167.103 131.354 167.348 132.833 167.57 cv
139.538 168.577 146.358 169.291 153.092 168.499 cv
158.806 167.827 164.676 166.096 170.216 167.346 cv
174.184 166.236 179.187 165.276 185.411 164.779 cv
195.06 164.01 213.347 168.496 217.576 168.88 cv
218.531 168.967 219.422 168.798 220.237 168.496 cv
220.242 168.336 220.257 168.174 220.268 168.013 cv
220.138 167.865 220.048 167.674 219.969 167.489 cv
219.022 165.26 218.061 162.98 217.877 160.565 cv
217.658 157.7 217.972 153.633 219.423 152.143 cv
220.709 150.824 224.825 155.656 228.394 157.67 cv
230.218 157.116 232.056 156.886 233.545 156.657 cv
234.888 156.45 236.394 156.062 237.923 155.765 cv
239.381 152.656 243.377 144.959 244.379 145.385 cv
246.137 146.132 247.478 153.509 247.623 158.54 cv
249.217 160.437 250.247 162.732 250.376 164.021 cv
250.552 165.784 248.152 177.002 244.54 180.299 cv
243.537 181.896 242.674 183.398 242.601 185.612 cv
242.492 188.945 240.002 201.686 240.258 204.505 cv
240.515 207.325 251.535 221.165 252.432 223.087 cv
253.329 225.009 255.892 224.881 257.687 226.931 cv
259.481 228.982 256.533 230.776 253.458 230.904 cv
250.382 231.032 247.947 229.494 246.922 227.829 cv
245.897 226.163 243.462 222.959 236.926 217.961 cv
230.391 212.963 226.931 207.453 226.29 205.915 cv
225.649 204.377 220.78 204.762 218.473 204.89 cv
216.166 205.018 213.603 208.35 212.066 210.785 cv
210.528 213.22 209.503 223.984 210.143 225.65 cv
210.784 227.316 213.475 224.625 215.141 228.469 cv
216.807 232.314 208.093 231.16 205.786 230.648 cv
203.48 230.135 203.223 226.547 201.942 223.343 cv
200.66 220.14 201.557 204.505 201.557 202.968 cv
201.557 201.474 194.209 204.914 182.232 204.109 cv
179.837 208.489 177.443 212.869 175.048 217.249 cv
174.615 218.042 174.168 218.901 174.273 219.799 cv
174.376 220.683 174.994 221.409 175.584 222.075 cv
176.992 223.665 178.622 225.369 180.74 225.528 cv
182.128 225.633 183.617 225.052 184.865 225.667 cv
185.994 226.224 186.5 227.622 186.387 228.876 cv
186.273 230.129 183.095 230.802 176.784 230.908 cv
174.18 230.952 163.636 220.929 162.378 219.058 cv
160.623 216.448 161.777 213.328 162.174 210.208 cv
162.496 207.68 162.246 204.822 161.419 202.318 cv
160.361 202.464 159.566 202.748 159.14 203.224 cv
156.961 205.659 144.147 213.348 144.147 213.348 cv
141.455 215.142 129.922 222.703 132.485 226.931 cv
133.754 229.025 131.204 231.545 129.794 231.801 cv
128.384 232.057 125.052 232.698 123.002 228.469 cv
120.952 224.24 135.176 204.634 138.252 199.123 cv
139.758 196.425 143.109 190.961 147.009 185.53 cv
145.658 186.454 144.24 187.264 142.709 187.889 cv
136.592 190.386 129.301 189.502 123.733 185.944 cv
118.166 182.386 113.92 176.397 113.157 169.834 cv
111.566 156.157 127.22 146.73 125.952 150.723 cv
cp
0 0 0 rgb
f
235.013 169.953 mo
234.76 169.355 234.327 167.714 232.522 167.678 cv
230.717 167.642 229.453 169.267 229.453 169.267 cv
229.453 169.267 229.955 171.52 231.655 171.52 cv
232.627 171.52 234.183 171.397 235.013 169.953 cv
cp
.282353 .623529 .796078 rgb
f
232.632 170.876 mo
233.121 170.555 233.221 169.891 233.254 169.307 cv
233.275 168.916 233.287 168.52 233.212 168.136 cv
233.186 168.006 233.149 167.877 233.1 167.753 cv
232.925 167.709 232.733 167.682 232.522 167.678 cv
231.826 167.664 231.21 167.897 230.717 168.189 cv
230.653 168.546 230.604 168.904 230.619 169.265 cv
230.639 169.788 230.808 170.326 231.19 170.683 cv
231.572 171.04 232.195 171.162 232.632 170.876 cv
cp
0 0 0 rgb
f
232.412 169.388 mo
232.518 169.24 232.544 169.039 232.48 168.87 cv
232.416 168.7 232.263 168.567 232.086 168.527 cv
232.004 168.506 231.917 168.556 231.869 168.625 cv
231.821 168.695 231.803 168.78 231.786 168.863 cv
231.762 168.986 231.737 169.111 231.753 169.236 cv
231.768 169.36 231.832 169.485 231.944 169.542 cv
232.104 169.622 232.308 169.533 232.412 169.388 cv
cp
1 1 1 rgb
f
245.382 165.645 mo
244.829 165.308 243.519 164.227 242.032 165.252 cv
240.545 166.276 240.466 168.332 240.466 168.332 cv
240.466 168.332 242.52 169.62 243.901 168.628 cv
244.69 168.061 245.55 167.303 245.382 165.645 cv
cp
.282353 .623529 .796078 rgb
f
242.032 165.252 mo
241.893 165.347 241.766 165.452 241.651 165.563 cv
241.59 165.928 241.543 166.295 241.556 166.665 cv
241.575 167.182 241.728 167.715 242.073 168.068 cv
242.419 168.421 242.982 168.542 243.378 168.259 cv
243.82 167.941 243.911 167.284 243.94 166.706 cv
243.96 166.319 243.97 165.928 243.902 165.547 cv
243.858 165.3 243.776 165.056 243.652 164.845 cv
243.161 164.774 242.61 164.853 242.032 165.252 cv
cp
0 0 0 rgb
f
243.098 166.769 mo
243.203 166.622 243.229 166.42 243.165 166.251 cv
243.101 166.081 242.948 165.948 242.771 165.908 cv
242.689 165.887 242.602 165.937 242.554 166.007 cv
242.506 166.076 242.488 166.161 242.471 166.244 cv
242.447 166.367 242.422 166.492 242.438 166.617 cv
242.453 166.741 242.517 166.866 242.629 166.923 cv
242.789 167.003 242.993 166.914 243.098 166.769 cv
cp
1 1 1 rgb
f
345.5 82.5615 mo
345.5 82.1872 345.784 81.675 346.247 81.0769 cv
346.269 81.1612 346.286 81.2466 346.309 81.3302 cv
347.115 84.2431 347.921 87.156 348.727 90.069 cv
349.568 93.1117 349.876 97.623 351.757 100.159 cv
350.323 99.5068 345.5 84.647 345.5 82.5615 cv
cp
290.212 103.012 mo
292.487 107.07 296.399 110.027 300.658 111.901 cv
304.917 113.775 309.538 114.659 314.137 115.369 cv
318.735 116.079 323.377 116.632 327.854 117.898 cv
330.547 118.659 333.298 119.767 335.051 121.949 cv
335.729 122.794 336.302 123.829 337.311 124.221 cv
338.807 124.803 340.476 123.608 341.168 122.16 cv
342.359 119.67 341.55 116.542 339.705 114.488 cv
337.861 112.434 335.165 111.322 332.456 110.79 cv
329.747 110.258 326.967 110.243 324.216 110.018 cv
316.671 109.401 309.276 107.137 302.644 103.491 cv
307.144 104.365 311.496 104.788 312.913 104.721 cv
315.65 104.59 333.378 104.981 334.942 102.765 cv
336.506 100.55 336.115 98.7247 335.724 97.9426 cv
335.333 97.1605 333.117 95.3357 331.553 95.4659 cv
329.988 95.5963 325.687 97.6819 323.732 97.9426 cv
321.776 98.2033 320.603 97.0301 322.558 94.5536 cv
324.514 92.0769 332.465 83.3434 332.726 81.1275 cv
332.986 78.9116 340.286 94.2928 340.938 95.7267 cv
341.59 97.1605 343.805 105.503 346.282 106.285 cv
348.759 107.067 355.667 107.328 355.276 104.721 cv
355.106 103.586 354.681 102.71 354.146 102.016 cv
356.036 102.874 358.373 102.982 360.454 102.619 cv
362.02 102.345 363.612 101.253 363.77 99.6721 cv
363.93 98.0795 362.485 96.644 360.904 96.3929 cv
360.124 96.269 359.315 96.3683 358.549 96.1733 cv
357.134 95.8124 356.13 94.4864 355.725 93.0825 cv
355.321 91.6785 355.407 90.1871 355.476 88.7275 cv
355.733 83.2355 355.668 77.7303 355.316 72.2435 cv
355.556 71.9706 355.772 71.7104 355.928 71.4817 cv
357.883 68.6141 363.097 56.6218 362.445 49.192 cv
361.794 41.7621 358.796 37.3301 358.796 33.55 cv
358.796 30.0806 361.199 24.6375 359.48 20.1377 cv
359.483 20.1337 359.486 20.1325 359.489 20.1282 cv
360.237 18.9371 361.241 13.2505 360.794 7.98485 cv
360.753 7.49871 360.683 6.95672 360.303 6.65038 cv
359.859 6.29235 359.198 6.42644 358.682 6.66906 cv
357.181 7.37468 356.143 8.77593 355.212 10.1493 cv
354.361 11.4052 353.042 12.7323 352.179 13.6114 cv
350.805 13.3745 349.219 13.3853 347.325 13.6066 cv
346.289 13.7276 343.902 13.7273 341.441 14.2471 cv
340.908 13.4042 338.593 11.4997 337.297 10.3744 cv
335.884 9.14647 334.254 8.1372 332.492 7.55706 cv
331.81 7.33275 331.62 7.86254 331.581 8.0941 cv
330.875 12.2971 331.448 16.7095 333.216 20.5884 cv
333.433 21.0643 333.805 21.7514 334.138 22.0063 cv
333.924 29.1746 336.127 30.3453 336.506 31.9858 cv
336.897 33.6804 335.984 39.8068 333.378 41.1103 cv
330.771 42.4137 319.691 44.4994 316.823 47.2367 cv
313.955 49.9741 299.487 57.1432 294.403 71.3513 cv
291.761 78.7364 289.976 85.262 289.5 90.2977 cv
287.574 94.2436 288.053 99.1598 290.212 103.012 cv
cp
0 0 0 rgb
f
344.488 23.4797 mo
344.483 23.7861 343.547 24.6922 342.251 24.7744 cv
340.956 24.8567 339.867 23.731 339.795 22.5991 cv
339.723 21.4672 340.898 20.4832 342.194 20.6626 cv
343.479 20.8407 344.416 22.3478 344.488 23.4797 cv
cp
.733333 .733333 .294118 rgb
f
343.806 23.8291 mo
344.081 23.4137 343.986 22.8577 343.814 22.3899 cv
343.763 22.2504 343.702 22.1073 343.588 22.0116 cv
343.474 21.9157 343.293 21.8839 343.179 21.9783 cv
343.073 22.0649 343.059 22.2214 343.081 22.3558 cv
343.104 22.4902 343.155 22.6213 343.15 22.7575 cv
343.139 23.1057 342.78 23.3376 342.443 23.4257 cv
341.592 23.6476 340.624 23.3134 340.092 22.6143 cv
340.237 23.2325 340.644 23.7846 341.192 24.1059 cv
341.74 24.4272 342.42 24.5132 343.031 24.3383 cv
343.334 24.2513 343.631 24.0923 343.806 23.8291 cv
cp
.862745 .85098 .447059 rgb
f
342.691 22.4935 mo
342.756 23.5179 342.583 24.3628 342.304 24.3805 cv
342.026 24.3981 341.748 23.5819 341.683 22.5575 cv
341.618 21.533 341.791 20.6882 342.069 20.6706 cv
342.347 20.6529 342.626 21.469 342.691 22.4935 cv
cp
0 0 0 rgb
f
341.859 21.9248 mo
341.876 22.1931 341.683 22.4236 341.428 22.4398 cv
341.173 22.456 340.952 22.2518 340.935 21.9835 cv
340.918 21.7152 341.111 21.4847 341.366 21.4685 cv
341.621 21.4523 341.842 21.6566 341.859 21.9248 cv
cp
1 1 1 rgb
f
350.41 23.1038 mo
350.454 23.4071 351.497 24.1876 352.792 24.1054 cv
354.088 24.0231 355.026 22.7688 354.954 21.6369 cv
354.882 20.505 353.593 19.6774 352.33 20.0193 cv
351.077 20.3584 350.338 21.9719 350.41 23.1038 cv
cp
.733333 .733333 .294118 rgb
f
354.695 22.2214 mo
354.755 21.8078 354.528 21.4066 354.263 21.0836 cv
354.12 20.9096 353.899 20.7312 353.693 20.8213 cv
353.556 20.8812 353.489 21.0419 353.482 21.1913 cv
353.475 21.3407 353.513 21.4885 353.521 21.6378 cv
353.548 22.1683 353.184 22.6591 352.726 22.9273 cv
352.267 23.1956 351.727 23.2813 351.199 23.3429 cv
351.688 23.6558 352.29 23.7859 352.864 23.7025 cv
353.438 23.6189 353.979 23.3225 354.358 22.8834 cv
354.522 22.6934 354.659 22.4699 354.695 22.2214 cv
cp
.862745 .85098 .447059 rgb
f
353.212 21.6917 mo
353.273 22.6424 353.086 23.4281 352.795 23.4466 cv
352.504 23.465 352.22 22.7093 352.159 21.7586 cv
352.099 20.8078 352.286 20.0221 352.577 20.0036 cv
352.867 19.9851 353.152 20.7409 353.212 21.6917 cv
cp
0 0 0 rgb
f
352.378 21.2571 mo
352.396 21.534 352.203 21.7717 351.947 21.788 cv
351.69 21.8042 351.469 21.5929 351.451 21.316 cv
351.433 21.0391 351.627 20.8014 351.883 20.7851 cv
352.139 20.7688 352.361 20.9802 352.378 21.2571 cv
cp
1 1 1 rgb
f
135.651 37.0361 mo
135.55 34.6729 132.382 24.6669 135.349 23.6109 cv
137.43 22.8702 143.092 30.047 143.092 30.047 cv
143.092 30.047 148.372 29.5945 151.892 30.1476 cv
154.054 26.1753 158.222 22.7438 159.953 23.2971 cv
162.35 24.0635 160.507 31.6109 160.203 33.0182 cv
159.904 34.3958 160.303 36.3936 160.474 38.8809 cv
163.219 40.599 166.535 41.5181 169.795 41.7797 cv
174.786 42.1802 179.778 41.297 184.764 40.8379 cv
196.941 39.7164 216.406 45.4416 220.887 43.0883 cv
225.367 40.735 230.332 31.2144 231.426 23.0353 cv
232.52 14.856 231.316 7.5089 229.728 2.49663 cv
228.188 -2.36129 234.149 .480254 235.821 5.79968 cv
236.813 8.95601 237.264 12.2725 237.182 15.5801 cv
236.533 41.5982 228.827 39.1901 229.74 51.5838 cv
230.164 57.329 230.504 63.4668 227.646 68.4688 cv
226.383 70.68 224.538 72.5692 223.637 74.9513 cv
222.351 78.3536 223.08 85.7069 223.712 88.8291 cv
224.628 93.3519 221.632 98.5271 220.515 105.611 cv
220.292 107.023 219.844 109.555 216.267 109.555 cv
214.838 109.555 211.499 108.898 212.542 105.952 cv
213.006 104.641 215.079 103.142 215.756 101.926 cv
217.18 99.3653 218.153 96.347 217.608 93.4425 cv
217.523 92.9867 217.109 92.1941 216.466 91.162 cv
213.347 95.3759 208.924 99.6099 205.594 103.087 cv
204.075 104.673 202.991 105.386 200.919 105.278 cv
199.617 105.21 197.573 105.228 196.942 103.947 cv
196.312 102.666 196.434 100.926 197.334 99.8675 cv
198.234 98.8088 199.879 98.6289 200.87 99.5794 cv
202.388 98.0248 203.924 96.4453 205.024 94.4979 cv
206.125 92.5507 206.758 90.1573 206.288 87.9116 cv
205.394 83.6337 200.917 81.0629 199.781 77.0631 cv
196.048 77.0255 192.112 77.7736 189.179 77.9378 cv
184.491 78.2002 179.771 79.2376 175.626 81.3884 cv
175.229 88.9012 174.708 96.4074 174.039 103.901 cv
173.915 105.291 173.771 106.732 173.063 107.936 cv
171.989 109.76 169.602 110.694 167.576 110.081 cv
165.549 109.468 163.729 109.672 163.963 107.463 cv
164.197 105.254 167.222 105.853 168.244 104.756 cv
169.265 103.66 169.555 102.047 169.416 100.555 cv
169.278 99.0631 168.765 97.636 168.373 96.1899 cv
167.683 93.6439 167.369 91.0239 167.228 88.3857 cv
162.963 93.6101 160.013 100.103 156.18 105.766 cv
155.276 107.102 154.297 108.419 153.019 109.404 cv
151.742 110.39 150.12 111.022 148.519 110.817 cv
146.919 110.612 145.402 109.437 145.094 107.853 cv
144.786 106.269 145.983 104.468 147.594 104.396 cv
148.257 104.367 148.921 104.602 149.574 104.491 cv
150.799 104.283 151.486 102.999 151.992 101.864 cv
154.072 97.1901 156.173 92.4481 156.957 87.393 cv
157.742 82.3379 157.065 76.8452 154.008 72.7433 cv
152.508 70.7301 150.504 69.1305 149.038 67.0921 cv
145.251 61.8254 136.786 49.3973 135.769 43.3887 cv
135.769 43.3887 135.775 43.3873 135.775 43.3872 cv
135.152 40.8788 135.723 38.7355 135.651 37.0361 cv
cp
0 0 0 rgb
f
144.157 41.5591 mo
144.132 41.8726 143.115 42.74 141.782 42.74 cv
140.45 42.74 139.407 41.5161 139.407 40.352 cv
139.407 39.1879 140.674 38.2563 141.99 38.5244 cv
143.296 38.7903 144.157 40.3951 144.157 41.5591 cv
cp
.733333 .733333 .294118 rgb
f
143.436 41.8727 mo
143.745 41.4651 143.684 40.8894 143.538 40.399 cv
143.495 40.2528 143.441 40.1022 143.331 39.9968 cv
143.221 39.8912 143.037 39.8469 142.914 39.9361 cv
142.8 40.0179 142.775 40.1773 142.789 40.3164 cv
142.804 40.4555 142.847 40.5932 142.834 40.7324 cv
142.8 41.0883 142.417 41.3025 142.066 41.3708 cv
141.18 41.5428 140.21 41.1376 139.71 40.3868 cv
139.819 41.0296 140.2 41.6215 140.74 41.9862 cv
141.281 42.351 141.972 42.4833 142.609 42.3439 cv
142.925 42.2745 143.24 42.131 143.436 41.8727 cv
cp
.862745 .85098 .447059 rgb
f
142.381 40.4321 mo
142.381 41.4857 142.148 42.3399 141.862 42.3399 cv
141.576 42.3399 141.344 41.4857 141.344 40.4321 cv
141.344 39.3785 141.576 38.5244 141.862 38.5244 cv
142.148 38.5244 142.381 39.3785 142.381 40.4321 cv
cp
0 0 0 rgb
f
141.565 39.7955 mo
141.565 40.0714 141.353 40.295 141.09 40.295 cv
140.828 40.295 140.615 40.0714 140.615 39.7955 cv
140.615 39.5196 140.828 39.296 141.09 39.296 cv
141.353 39.296 141.565 39.5196 141.565 39.7955 cv
cp
1 1 1 rgb
f
150.248 41.5591 mo
150.273 41.8726 151.291 42.74 152.623 42.74 cv
153.955 42.74 154.998 41.5161 154.998 40.352 cv
154.998 39.1879 153.731 38.2563 152.415 38.5244 cv
151.109 38.7903 150.248 40.3951 150.248 41.5591 cv
cp
.733333 .733333 .294118 rgb
f
154.695 40.9339 mo
154.783 40.5142 154.577 40.0885 154.326 39.7403 cv
154.191 39.5527 153.976 39.3557 153.759 39.4346 cv
153.615 39.487 153.536 39.6473 153.519 39.7998 cv
153.502 39.9524 153.531 40.1062 153.53 40.2598 cv
153.524 40.8049 153.118 41.284 152.631 41.5289 cv
152.144 41.7739 151.585 41.8266 151.041 41.8554 cv
151.521 42.2076 152.13 42.3801 152.723 42.3319 cv
153.316 42.2836 153.889 42.0151 154.306 41.5901 cv
154.486 41.4061 154.641 41.186 154.695 40.9339 cv
cp
.862745 .85098 .447059 rgb
f
153.21 40.2949 mo
153.21 41.2727 152.968 42.0653 152.669 42.0653 cv
152.37 42.0653 152.127 41.2727 152.127 40.2949 cv
152.127 39.3171 152.37 38.5244 152.669 38.5244 cv
152.968 38.5244 153.21 39.3171 153.21 40.2949 cv
cp
0 0 0 rgb
f
152.384 39.7955 mo
152.384 40.0803 152.171 40.3112 151.907 40.3112 cv
151.644 40.3112 151.431 40.0803 151.431 39.7955 cv
151.431 39.5107 151.644 39.2798 151.907 39.2798 cv
152.171 39.2798 152.384 39.5107 152.384 39.7955 cv
cp
1 1 1 rgb
f
4.46263 287.738 mo
6.49583 286.593 11.0029 291.975 12.7998 291.882 cv
14.5965 291.789 18.7166 290.455 22.2069 291.426 cv
25.8375 287.498 28.5471 284.946 30.3241 285.699 cv
32.1009 286.452 29.5286 293.445 30.2412 296.991 cv
30.3606 297.585 30.4561 298.151 30.5411 298.703 cv
36.8704 304.223 44.2644 305.041 51.8257 306.521 cv
60.4394 308.206 69.2423 308.703 77.9043 310.12 cv
86.5661 311.537 95.2732 313.967 102.43 319.048 cv
109.587 324.129 114.134 329.614 114.237 338.391 cv
114.29 342.832 114.129 350.621 117.271 353.761 cv
119.1 355.587 122.436 357.646 125.02 357.685 cv
134.569 357.827 135.509 362.513 134.136 364.702 cv
132.869 366.722 130.042 366.989 127.673 366.711 cv
120.952 365.922 114.381 363.913 110.137 358.642 cv
106.24 353.802 104.479 347.559 104.627 340.159 cv
101.9 342.998 100.441 347.054 100.859 350.978 cv
101.032 352.603 101.501 354.241 101.198 355.847 cv
100.877 357.554 99.7328 358.973 98.6269 360.312 cv
96.7928 362.533 94.8854 364.815 92.3223 366.129 cv
90.6201 367.002 88.548 367.322 86.7244 366.878 cv
84.5392 368.181 82.3118 369.197 80.3055 369.609 cv
78.0877 370.064 74.2553 371.047 72.6 369.502 cv
67.9542 365.166 77.5335 364.616 80.3291 363.397 cv
83.125 362.178 84.9848 358.396 83.1416 355.966 cv
81.6724 354.029 80.6895 353.514 78.6738 352.155 cv
75.7554 350.187 61.1463 352.38 49.1983 338.921 cv
47.1359 346.582 48.5143 351.69 47.9989 360.106 cv
47.9242 361.325 46.9214 364.321 46.2454 365.338 cv
44.9209 367.331 42.0851 367.437 39.6944 367.33 cv
38.464 367.275 36.4409 367.861 36.0463 365.905 cv
35.8835 365.098 36.3724 364.402 37.0298 363.812 cv
35.521 363.991 34.0224 364.31 32.7199 363.56 cv
32.156 363.235 31.6201 362.808 31.344 362.218 cv
31.0679 361.629 31.1165 360.852 31.5949 360.411 cv
32.2028 359.85 33.2373 360 33.849 359.443 cv
34.3534 358.984 34.3922 358.216 34.386 357.534 cv
34.3333 351.698 33.6038 345.87 32.2335 340.197 cv
28.75 337.612 25.0651 336.434 20.9343 331.518 cv
17.0808 326.932 15.6127 323.387 14.4121 318.182 cv
13.655 314.899 11.4674 313.681 9.92941 311.748 cv
7.73693 310.193 6.52495 308.299 5.63003 305.571 cv
5.0224 303.719 6.13662 299.193 6.13662 299.193 cv
6.13662 299.193 2.42949 288.884 4.46263 287.738 cv
cp
0 0 0 rgb
f
15.9108 303.907 mo
14.2585 300.728 11.283 302.227 10.7924 302.922 cv
11.1759 305.074 14.6798 306.411 15.9108 303.907 cv
cp
.752941 .752941 .184314 rgb
f
13.862 302.056 mo
13.5464 301.969 13.2311 301.943 12.9284 301.961 cv
12.9226 302.219 12.936 302.509 12.9725 302.815 cv
13.0935 303.833 13.3875 304.436 13.6632 304.403 cv
13.939 304.371 14.0922 303.714 13.9711 302.696 cv
13.9441 302.469 13.9064 302.255 13.862 302.056 cv
cp
0 0 0 rgb
f
13.4887 302.936 mo
13.52 303.2 13.331 303.439 13.0666 303.471 cv
12.802 303.502 12.5623 303.314 12.5308 303.05 cv
12.4995 302.786 12.6884 302.547 12.9529 302.516 cv
13.2173 302.484 13.4572 302.672 13.4887 302.936 cv
cp
1 1 1 rgb
f
21.329 303.538 mo
22.1998 300.2 25.4702 301.306 26.1152 301.93 cv
26.2464 304.098 23.1258 305.851 21.329 303.538 cv
cp
.752941 .752941 .184314 rgb
f
23.0864 301.388 mo
23.0914 301.569 23.1045 301.761 23.1282 301.96 cv
23.2472 302.96 23.5651 303.745 23.8384 303.712 cv
24.1118 303.68 24.2366 302.842 24.1176 301.842 cv
24.0924 301.63 24.0569 301.429 24.0161 301.242 cv
23.7068 301.241 23.3908 301.284 23.0864 301.388 cv
cp
0 0 0 rgb
f
23.6683 302.184 mo
23.6998 302.447 23.5108 302.687 23.2464 302.718 cv
22.9818 302.75 22.7421 302.561 22.7106 302.298 cv
22.6793 302.034 22.8682 301.794 23.1327 301.763 cv
23.3971 301.732 23.637 301.92 23.6683 302.184 cv
cp
1 1 1 rgb
f
2.46913 103.837 mo
3.73036 103.575 5.03187 103.893 6.28059 104.21 cv
9.41096 100.387 9.77034 96.451 11.2193 92.4635 cv
12.9874 87.5977 14.2463 82.6104 14.0556 77.4368 cv
13.8473 71.7897 14.505 67.482 12.858 63.1235 cv
12.7498 62.8785 12.6477 62.6323 12.5524 62.3829 cv
12.5166 62.3013 12.4865 62.2199 12.4489 62.1382 cv
12.455 62.1429 12.4619 62.1476 12.4681 62.1524 cv
10.562 56.9382 11.3062 50.9869 11.7332 49.7056 cv
12.2797 48.0663 12.0065 42.7386 13.0994 37.6841 cv
14.1922 32.6297 14.0556 27.5752 14.0556 25.7993 cv
14.0556 24.0234 14.1922 14.1878 14.742 12.4118 cv
15.2916 10.636 17.6073 7.08422 19.2467 8.17705 cv
20.8859 9.26989 24.8475 19.1056 24.8475 19.1056 cv
24.8475 19.1056 30.9949 20.335 33.1806 22.2475 cv
37.4154 19.9252 44.2457 17.4664 45.202 18.969 cv
46.1582 20.4717 38.7814 28.2582 37.2788 30.9904 cv
35.7761 33.7226 32.4975 36.0448 32.4975 37.2743 cv
32.4975 38.5038 34.8728 39.2156 36.4591 41.0993 cv
38.6449 43.6949 39.0147 44.5552 40.2579 45.5171 cv
40.2583 45.5373 40.2581 45.5599 40.2583 45.5812 cv
49.867 45.5196 58.7894 51.8149 63.8463 60.0183 cv
68.9944 68.3698 70.6851 78.4109 71.0477 88.2149 cv
71.1608 91.2695 71.184 94.4509 72.5552 97.1829 cv
74.3203 100.699 78.0895 102.863 81.9425 103.662 cv
85.8048 104.462 89.2809 107.483 92.3626 109.945 cv
95.4443 112.407 98.0332 115.674 98.9615 119.507 cv
99.8897 123.341 98.9066 127.762 95.9148 130.332 cv
93.2063 132.659 86.4675 134.155 82.6052 134.805 cv
70.2188 136.891 58.5217 137.67 46.8514 133.025 cv
45.0193 132.296 44.1298 127.231 49.4052 128.072 cv
60.085 129.775 58.4474 130.559 72.9316 130.085 cv
77.6522 129.93 86.9645 127.965 88.8722 127.564 cv
90.7799 127.163 92.6413 126.029 93.4058 124.236 cv
94.5761 121.49 92.8435 118.361 90.7406 116.244 cv
84.6647 110.126 75.6799 108.157 67.2252 106.464 cv
67.8341 107.489 67.1683 108.888 66.1387 109.488 cv
65.1092 110.089 63.8538 110.108 62.6618 110.11 cv
54.8223 110.125 46.9826 110.14 39.143 110.155 cv
37.3183 110.159 35.7227 109.754 35.4727 107.947 cv
35.3498 107.058 35.6423 106.35 36.1741 105.812 cv
35.6508 105.423 35.2074 104.941 34.9155 104.355 cv
34.2706 103.063 34.5536 101.274 35.7673 100.49 cv
36.6137 99.9441 37.6955 99.9635 38.6994 100.048 cv
39.6391 100.126 41.3309 100.565 43.4185 100.759 cv
42.1644 100.03 41.0073 99.2427 40.0231 98.4018 cv
37.297 96.0728 35.1148 93.3245 34.0006 90.2903 cv
32.0084 97.396 29.6571 105.848 29.0823 107.49 cv
28.1261 110.222 23.4814 109.676 21.1591 109.403 cv
18.8367 109.13 18.2904 108.447 19.11 105.988 cv
19.9296 103.529 23.2083 104.895 24.0279 103.939 cv
24.8475 102.982 26.4868 93.4198 26.4868 93.4198 cv
26.4868 93.4198 27.9895 82.0815 26.2136 78.6662 cv
26.1585 78.5602 26.0909 78.454 26.0296 78.348 cv
25.7567 79.0703 25.4054 79.7704 25.0469 80.4556 cv
23.3394 83.7192 21.632 86.9828 19.9245 90.2465 cv
17.8789 94.1564 15.8333 98.0663 13.7877 101.976 cv
12.7776 103.907 11.7713 105.751 10.3164 107.432 cv
8.77492 109.214 8.25142 108.722 5.61732 108.841 cv
3.9535 108.915 -.00847028 108.084 1.36036e-05 106.418 cv
.00648333 105.13 1.2079 104.1 2.46913 103.837 cv
cp
0 0 0 rgb
f
26.2294 27.4639 mo
26.2294 27.4639 26.0966 24.7194 24.2816 24.1882 cv
22.4668 23.657 21.5372 25.162 21.5372 25.5604 cv
21.5372 25.9589 22.1569 27.7737 23.8833 27.9507 cv
25.6096 28.1278 26.2294 27.4639 26.2294 27.4639 cv
cp
1 .666667 .372549 rgb
f
22.0514 25.0066 mo
21.9488 25.1181 21.9374 25.2849 21.9461 25.4362 cv
21.9903 26.2127 22.4387 26.9551 23.1053 27.3558 cv
23.772 27.7565 24.6379 27.8039 25.3444 27.4787 cv
24.3624 27.3684 23.4631 26.697 23.0786 25.7867 cv
22.9669 25.5224 22.8871 25.2276 22.672 25.0377 cv
22.4999 24.8858 22.2069 24.8376 22.0514 25.0066 cv
cp
.945098 .580392 .286275 rgb
f
24.8599 25.9704 mo
25.0031 25.5349 25.0687 25.0743 25.0551 24.616 cv
24.8389 24.4276 24.5841 24.2768 24.2816 24.1882 cv
24.1354 24.1454 23.9954 24.1171 23.8606 24.099 cv
23.328 24.9997 23.6067 26.6923 23.691 26.9398 cv
23.7827 27.2095 24.2541 26.8881 24.4535 26.6929 cv
24.653 26.4978 24.7728 26.2355 24.8599 25.9704 cv
cp
0 0 0 rgb
f
24.6287 25.4181 mo
24.6287 25.7551 24.3428 26.0284 23.9903 26.0284 cv
23.6379 26.0284 23.3521 25.7551 23.3521 25.4181 cv
23.3521 25.0811 23.6379 24.8079 23.9903 24.8079 cv
24.3428 24.8079 24.6287 25.0811 24.6287 25.4181 cv
cp
1 1 1 rgb
f
31.5412 29.4116 mo
32.0563 28.9126 33.1348 27.641 34.0644 28.1721 cv
34.994 28.7033 35.3923 29.5886 35.3481 29.9427 cv
35.3037 30.2968 34.5513 31.492 33.8873 31.4035 cv
33.2233 31.3149 32.0282 31.1379 31.5412 29.4116 cv
cp
1 .666667 .372549 rgb
f
32.0894 29.7855 mo
32.1786 30.3252 32.6159 30.7904 33.1489 30.9129 cv
33.682 31.0355 34.2785 30.8079 34.5945 30.3614 cv
33.8622 30.5362 33.0408 30.2547 32.5696 29.6675 cv
32.5204 29.6061 32.4737 29.5407 32.4092 29.4955 cv
32.3448 29.4504 32.2568 29.429 32.1868 29.4649 cv
32.0802 29.5196 32.0699 29.6674 32.0894 29.7855 cv
cp
.945098 .580392 .286275 rgb
f
34.3212 28.3412 mo
34.3212 28.3394 li
34.2401 28.2805 34.1556 28.2242 34.0644 28.1721 cv
33.7714 28.0047 33.4638 28.0165 33.1637 28.1266 cv
32.7906 28.7023 32.6 29.3963 32.6365 30.0819 cv
32.6429 30.201 32.6587 30.327 32.7334 30.4201 cv
32.8419 30.5551 33.0417 30.5777 33.2117 30.5441 cv
33.6497 30.4577 33.9836 30.0789 34.1413 29.6613 cv
34.299 29.2436 34.311 28.7874 34.3212 28.3412 cv
cp
0 0 0 rgb
f
33.843 29.1928 mo
33.843 29.4875 33.5719 29.7265 33.2376 29.7265 cv
32.9032 29.7265 32.6321 29.4875 32.6321 29.1928 cv
32.6321 28.898 32.9032 28.659 33.2376 28.659 cv
33.5719 28.659 33.843 28.898 33.843 29.1928 cv
cp
1 1 1 rgb
f
228.42 318.172 mo
229.377 313.384 232.254 317.21 235.14 320.203 cv
237.307 322.45 243.692 329.931 251.618 331.613 cv
259.544 333.294 269.561 327.9 280.347 315.931 cv
282.473 313.572 285.46 311.32 289.03 309.255 cv
303.575 300.843 327.938 295.59 344.533 299.401 cv
344.474 296.346 344.509 294.983 344.868 292.708 cv
345.227 290.434 339.274 279.837 340.918 279.421 cv
343.649 278.729 349.292 283.862 350.496 284.39 cv
351.7 284.919 359.233 283.85 359.233 283.85 cv
359.233 283.85 362.98 275.96 365.577 276.189 cv
368.174 276.418 369.049 286.603 369.049 286.603 cv
369.049 286.603 371.511 293.3 370.793 297.969 cv
370.074 302.637 369.639 309.587 370.242 313.298 cv
370.844 317.008 370.924 322.822 365.458 330.655 cv
364.803 331.593 363.779 332.646 362.542 333.714 cv
360.772 337.524 359.803 341.719 359.384 345.915 cv
358.816 351.602 359.197 357.336 359.579 363.039 cv
361.862 362.992 363.881 365.326 363.508 367.579 cv
361.653 368.553 359.571 369.092 357.477 369.141 cv
355.489 369.187 353.263 368.641 352.226 366.944 cv
351.324 365.469 351.588 363.598 351.748 361.876 cv
352.365 355.248 350.981 348.599 349.265 342.167 cv
349.176 341.836 349.089 341.494 349.019 341.148 cv
348.954 341.159 348.882 341.179 348.819 341.189 cv
348.819 341.189 345.813 359.501 347.489 362.374 cv
349.165 365.247 352.165 365.231 351.925 367.505 cv
351.686 369.78 349.787 370.338 348.184 370.338 cv
344.114 370.338 342.235 369.2 341.158 367.285 cv
340.497 366.111 338.477 357.294 336.586 350.188 cv
335.391 345.699 333.868 342.043 333.975 340.95 cv
331.105 342.171 324.799 343.931 318.977 344.258 cv
317.807 347.099 315.312 349.393 312.338 350.199 cv
310.789 350.619 309.152 350.662 307.622 351.145 cv
306.091 351.628 304.588 352.718 304.302 354.297 cv
303.972 356.114 305.316 357.765 306.568 359.121 cv
307.649 360.293 308.832 361.525 310.389 361.865 cv
311.856 362.186 313.552 361.689 314.781 362.551 cv
315.929 363.357 316.092 365.125 315.378 366.333 cv
314.664 367.541 313.294 368.234 311.916 368.5 cv
309.599 368.947 307.17 368.345 305.095 367.221 cv
303.02 366.097 301.257 364.479 299.611 362.788 cv
296.312 359.4 293.354 355.548 291.595 351.187 cv
289.718 351.29 287.659 351.318 285.375 351.244 cv
282.442 351.15 284.637 362.908 285.973 362.975 cv
289.925 363.176 291.659 366.137 289.177 368.093 cv
287.413 369.483 283.618 369.803 281.053 368.574 cv
279.507 367.834 277.115 358.725 276.995 353.847 cv
276.876 348.97 275.439 344.9 276.995 343.463 cv
278.552 342.027 287.81 335.088 284.099 327.128 cv
284.086 327.138 284.072 327.148 284.058 327.158 cv
278.654 330.981 269.197 340.615 251.498 338.196 cv
233.756 335.772 227.462 322.961 228.42 318.172 cv
cp
0 0 0 rgb
f
356.61 295.285 mo
356.61 295.285 356.902 293.184 358.769 293.068 cv
360.636 292.951 361.716 293.826 361.716 294.176 cv
361.716 295.314 360.811 296.457 359.294 296.515 cv
357.777 296.573 357.135 296.073 356.61 295.285 cv
cp
.282353 .623529 .796078 rgb
f
361.398 294.502 mo
361.407 294.418 361.406 294.324 361.353 294.259 cv
361.274 294.163 361.115 294.176 361.016 294.25 cv
360.917 294.324 360.86 294.441 360.8 294.549 cv
360.243 295.552 359.045 296.156 357.908 296.008 cv
358.605 296.192 359.357 296.267 360.041 296.037 cv
360.724 295.807 361.32 295.219 361.398 294.502 cv
cp
.439216 .776471 .909804 rgb
f
357.271 294.28 mo
357.222 294.372 357.194 294.471 357.195 294.569 cv
357.196 294.637 357.215 294.711 357.285 294.756 cv
357.383 294.82 357.539 294.802 357.657 294.759 cv
357.988 294.637 358.158 294.374 358.391 294.165 cv
358.838 293.765 359.586 293.55 360.292 293.62 cv
359.823 293.467 359.284 293.452 358.778 293.519 cv
358.147 293.603 357.502 293.849 357.271 294.28 cv
cp
.0745098 .478431 .635294 rgb
f
358.096 294.657 mo
358.096 295.439 358.401 296.072 358.777 296.072 cv
359.153 296.072 359.458 295.439 359.458 294.657 cv
359.458 293.876 359.153 293.242 358.777 293.242 cv
358.401 293.242 358.096 293.876 358.096 294.657 cv
cp
0 0 0 rgb
f
358.918 294.497 mo
358.918 294.771 359.16 294.993 359.458 294.993 cv
359.756 294.993 359.998 294.771 359.998 294.497 cv
359.998 294.223 359.756 294.001 359.458 294.001 cv
359.16 294.001 358.918 294.223 358.918 294.497 cv
cp
1 1 1 rgb
f
351.205 294.959 mo
351.205 294.959 350.74 292.895 349.117 292.944 cv
347.494 292.992 346.652 293.959 346.687 294.307 cv
346.803 295.439 347.7 296.496 349.015 296.42 cv
350.329 296.344 350.832 295.789 351.205 294.959 cv
cp
.282353 .623529 .796078 rgb
f
350.86 294.615 mo
350.866 294.53 350.866 294.437 350.828 294.371 cv
350.772 294.275 350.66 294.289 350.591 294.363 cv
350.521 294.437 350.481 294.553 350.438 294.662 cv
350.046 295.664 349.201 296.269 348.399 296.121 cv
348.891 296.305 349.421 296.379 349.903 296.149 cv
350.385 295.919 350.805 295.332 350.86 294.615 cv
cp
.439216 .776471 .909804 rgb
f
347.017 294.037 mo
346.967 294.129 346.939 294.227 346.94 294.326 cv
346.941 294.394 346.96 294.467 347.03 294.513 cv
347.128 294.577 347.285 294.559 347.402 294.515 cv
347.733 294.394 347.903 294.131 348.136 293.922 cv
348.583 293.521 349.331 293.307 350.038 293.377 cv
349.568 293.224 349.029 293.209 348.523 293.276 cv
347.893 293.36 347.247 293.606 347.017 294.037 cv
cp
.0745098 .478431 .635294 rgb
f
347.934 294.632 mo
347.934 295.413 348.239 296.047 348.615 296.047 cv
348.991 296.047 349.295 295.413 349.295 294.632 cv
349.295 293.85 348.991 293.217 348.615 293.217 cv
348.239 293.217 347.934 293.85 347.934 294.632 cv
cp
0 0 0 rgb
f
348.801 294.303 mo
348.801 294.577 349.042 294.799 349.341 294.799 cv
349.639 294.799 349.88 294.577 349.88 294.303 cv
349.88 294.029 349.639 293.807 349.341 293.807 cv
349.042 293.807 348.801 294.029 348.801 294.303 cv
cp
1 1 1 rgb
f
367.755 222.36 mo
366.138 220.688 364.173 219.387 362.525 217.746 cv
356.193 211.441 353.814 202.396 350.019 194.306 cv
346.592 186.999 342.249 180.313 335.231 176.328 cv
328.213 172.343 320.343 170.069 312.412 168.571 cv
309.041 167.934 305.044 166.955 303.898 163.72 cv
303.171 161.668 303.913 159.426 304.494 157.328 cv
306.185 151.226 306.123 140.544 304.773 139.122 cv
303.423 137.701 299.111 144.282 297.316 146.605 cv
295.223 146.364 292.987 146.188 291.158 146.454 cv
288.454 144.78 286.981 138.27 283.844 137.748 cv
282.286 137.489 281.941 145.408 281.814 146.983 cv
280.725 160.451 284.093 161.786 284.842 168.808 cv
285.497 174.954 285.314 179.751 287.29 185.608 cv
288.944 190.512 291.628 195.192 295.47 198.604 cv
296.169 204.818 295.571 211.176 293.687 217.139 cv
293.408 218.024 292.955 219.035 292.044 219.215 cv
291.306 219.36 286.69 219.631 287.738 222.792 cv
288.28 224.429 292.253 224.215 293.971 224.074 cv
296.78 223.845 296.965 222.24 298.285 219.75 cv
299.606 217.26 300.134 214.442 300.886 211.725 cv
301.423 209.786 302.126 207.829 303.241 206.178 cv
303.718 208.133 303.447 210.333 302.888 212.313 cv
301.81 216.125 302.036 218.466 299.419 221.44 cv
298.471 222.516 295.234 223.455 295.205 224.889 cv
295.162 227.004 297.452 228.275 299.566 228.186 cv
304.413 227.983 305.594 227.031 306.752 222.32 cv
307.911 217.608 310.271 209.693 313.659 206.22 cv
315.928 212.26 320.377 217.455 325.997 220.626 cv
323.785 221.231 321.495 220.223 319.226 219.886 cv
316.958 219.549 314.031 220.436 313.764 222.713 cv
313.592 224.176 314.702 225.546 316.04 226.161 cv
317.379 226.775 318.902 226.803 320.374 226.819 cv
327.823 226.904 343.251 227.322 350.606 226.28 cv
355.996 225.515 353.438 223.794 358.365 221.444 cv
360.691 220.99 362.925 223.305 362.929 225.675 cv
362.934 228.044 361.213 230.154 359.118 231.261 cv
357.022 232.368 354.6 232.652 352.236 232.827 cv
340.669 233.688 325.463 232.061 320.994 231.556 cv
316.526 231.051 317.147 234.104 318.168 235.131 cv
319.189 236.159 320.625 236.639 322.017 237.039 cv
335.16 240.821 349.469 240.436 362.389 235.951 cv
366.039 234.684 370.109 232.409 370.453 228.56 cv
370.66 226.244 369.371 224.032 367.755 222.36 cv
cp
0 0 0 rgb
ef
290.114 154.466 mo
290.087 154.744 289.093 155.351 287.833 155.351 cv
286.573 155.351 285.586 153.931 285.552 153.374 cv
285.518 152.816 286.573 151.397 287.833 151.397 cv
289.093 151.397 290.114 152.816 290.114 154.466 cv
cp
1 .666667 .372549 rgb
ef
289.439 153.306 mo
289.439 154.118 288.804 154.776 288.02 154.776 cv
287.237 154.776 286.602 154.118 286.602 153.306 cv
286.602 152.494 287.237 151.836 288.02 151.836 cv
288.804 151.836 289.439 152.494 289.439 153.306 cv
cp
0 0 0 rgb
ef
288.898 153.408 mo
288.898 153.678 288.701 153.898 288.459 153.898 cv
288.217 153.898 288.02 153.678 288.02 153.408 cv
288.02 153.137 288.217 152.918 288.459 152.918 cv
288.701 152.918 288.898 153.137 288.898 153.408 cv
cp
1 1 1 rgb
ef
295.522 154.536 mo
295.482 154.813 296.3 155.639 297.521 155.939 cv
298.742 156.24 300.038 155.097 300.204 154.563 cv
300.369 154.03 299.686 152.4 298.465 152.1 cv
297.244 151.8 295.916 152.935 295.522 154.536 cv
cp
1 .666667 .372549 rgb
ef
299.513 153.953 mo
299.513 154.765 298.878 155.423 298.094 155.423 cv
297.311 155.423 296.676 154.765 296.676 153.953 cv
296.676 153.141 297.311 152.483 298.094 152.483 cv
298.878 152.483 299.513 153.141 299.513 153.953 cv
cp
0 0 0 rgb
ef
298.972 154.054 mo
298.972 154.325 298.775 154.544 298.533 154.544 cv
298.291 154.544 298.094 154.325 298.094 154.054 cv
298.094 153.783 298.291 153.564 298.533 153.564 cv
298.775 153.564 298.972 153.783 298.972 154.054 cv
cp
1 1 1 rgb
ef
5.51673 220.981 mo
5.97535 220.659 6.47998 220.409 7.00647 220.218 cv
7.0293 220.109 7.05152 220 7.07093 219.893 cv
7.31641 218.541 7.05933 217.157 6.95496 215.787 cv
6.85059 214.417 6.93048 212.941 7.73719 211.829 cv
8.1012 211.327 8.59796 210.964 9.15283 210.711 cv
9.12574 210.176 9.11988 209.641 9.1485 209.109 cv
9.29157 206.457 10.0372 203.878 10.7781 201.327 cv
11.8018 197.802 12.8254 194.277 13.8491 190.751 cv
13.4291 190.303 13.0572 189.818 12.8023 189.261 cv
12.1179 187.763 12.377 185.989 12.9914 184.461 cv
13.6059 182.934 14.5478 181.562 15.267 180.081 cv
15.3958 179.815 15.5112 179.54 15.6292 179.267 cv
14.9196 176.646 14.2213 165.258 15.3524 164.876 cv
16.7072 164.419 21.0812 166.897 23.8668 169.123 cv
25.2466 168.803 26.7084 168.701 28.1229 168.671 cv
31.5746 168.597 35.2075 168.906 38.1321 170.692 cv
40.1636 169.495 42.3777 168.359 42.9663 168.206 cv
43.5807 168.046 45.8273 167.09 46.0079 168.661 cv
46.1938 170.276 45.6628 180.783 44.9936 183.664 cv
45.0029 183.716 45.0117 183.767 45.021 183.819 cv
51.9764 184.265 62.2713 180.69 75.6059 184.76 cv
95.4564 190.819 101.042 202.562 101.406 206.501 cv
101.771 210.441 100.501 213.809 97.4174 216.714 cv
94.3339 219.62 87.8102 220.434 83.8938 222.444 cv
79.9774 224.454 75.9856 226.45 72.7325 229.212 cv
71.1774 230.533 69.7976 232.023 68.0545 233.153 cv
65.2876 234.946 61.793 235.699 58.3525 235.94 cv
56.7252 236.054 54.7939 235.936 53.9057 234.746 cv
53.0192 233.558 53.6829 231.972 54.5364 230.766 cv
58.1899 225.605 64.7248 222.566 71.1807 220.274 cv
71.3401 220.218 71.502 220.164 71.6619 220.108 cv
67.5944 220.203 63.5056 220.201 59.4829 220.447 cv
52.1596 220.894 44.7551 222.186 37.4304 222.712 cv
36.394 223.108 35.3185 223.417 34.2662 223.775 cv
32.4467 224.394 30.6828 225.198 28.8069 225.617 cv
28.6626 225.649 28.5156 225.674 28.3693 225.701 cv
28.1898 225.89 27.9797 226.053 27.7484 226.171 cv
27.215 226.442 26.6099 226.533 26.015 226.597 cv
23.2705 226.895 20.4749 226.709 17.7927 226.056 cv
17.1833 225.908 16.3967 223.403 17.0186 222.512 cv
17.3708 222.007 17.7998 221.552 18.2838 221.165 cv
17.7766 221.009 17.271 220.843 16.7733 220.653 cv
16.5092 221.807 15.9837 222.928 15.0535 223.628 cv
15.1454 223.929 15.1773 224.238 15.0814 224.536 cv
14.86 225.222 14.0947 225.552 13.4017 225.752 cv
11.3606 226.338 9.19995 226.505 7.0929 226.24 cv
5.87287 226.086 4.50489 225.657 4.01831 224.527 cv
3.46802 223.25 4.37824 221.779 5.51673 220.981 cv
cp
0 0 0 rgb
f
32.0802 184.812 mo
32.0802 184.812 32.327 182.946 34.7336 182.848 cv
37.1402 182.749 37.2875 184.203 37.2875 184.203 cv
37.2875 184.203 36.7964 186.321 35.0284 186.401 cv
33.2603 186.482 32.4717 185.5 32.0802 184.812 cv
cp
.643137 .643137 .207843 rgb
f
32.7003 183.658 mo
33.0895 183.255 33.7078 182.89 34.7336 182.848 cv
35.3281 182.823 35.7826 182.895 36.1332 183.015 cv
36.2296 183.237 36.2913 183.478 36.2913 183.736 cv
36.2913 184.739 35.4866 185.551 34.4938 185.551 cv
33.5011 185.551 32.6964 184.739 32.6964 183.736 cv
32.6964 183.71 32.6986 183.684 32.7003 183.658 cv
cp
0 0 0 rgb
f
34.3649 184.088 mo
34.3649 184.342 34.5588 184.548 34.7979 184.548 cv
35.037 184.548 35.2309 184.342 35.2309 184.088 cv
35.2309 183.833 35.037 183.627 34.7979 183.627 cv
34.5588 183.627 34.3649 183.833 34.3649 184.088 cv
cp
1 1 1 rgb
f
25.1379 184.126 mo
25.1379 184.126 24.891 182.26 22.4845 182.162 cv
20.0777 182.063 19.9305 183.517 19.9305 183.517 cv
19.9305 183.517 20.4216 185.635 22.1897 185.715 cv
23.9578 185.796 24.7464 184.814 25.1379 184.126 cv
cp
.643137 .643137 .207843 rgb
f
24.2682 182.75 mo
24.2917 182.865 24.3116 182.982 24.3116 183.104 cv
24.3116 184.095 23.5159 184.899 22.5342 184.899 cv
21.5526 184.899 20.7568 184.095 20.7568 183.104 cv
20.7568 182.856 20.8155 182.625 20.9058 182.41 cv
21.2769 182.246 21.7733 182.133 22.4845 182.162 cv
23.314 182.195 23.8735 182.444 24.2682 182.75 cv
cp
0 0 0 rgb
f
22.4052 183.478 mo
22.4052 183.732 22.5991 183.938 22.8382 183.938 cv
23.0774 183.938 23.2713 183.732 23.2713 183.478 cv
23.2713 183.223 23.0774 183.017 22.8382 183.017 cv
22.5991 183.017 22.4052 183.223 22.4052 183.478 cv
cp
1 1 1 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 17.1.0%%For: (Iana) ()%%Title: (1505.m00.i004.n011.S.c13.132272738 Vector Cats.eps)%%CreationDate: 24.05.15 19:18%%Canvassize: 16383%AI9_DataStream%Gb",KGs`7ef(]%Fp^V:0;'C%*oa7W#64a8c^jX%\1_@c@(2(:04J2R8^N6E=%YUXG;+R)0\LLQn4o89Fl04I:]36ac:KD4[0;MR/%ZE9@.Re0*E9i&MPm=if+4joA]l#SBB=H5cIN3qu@1sWJV^8l&gQ)teTQ*AurD:Ao$Zaj6if,DnfeEX5b278u>Thk6Y%q3"Rq^]'P%c54d'VDB1:@BNQ>F1"I`hb(Fn")[=bLV@KN(`JF,dHhlk<2a@mCpdqX1bj-EhHO?D01V$"hor"3n>+QM2=dkIXnq,kouq6^1@KZo%cV$>o[?*0.^DZl%PmrfGm;bi89Qb^0O0(o$Rc-hQViHKY%ruA%PQ*H2J+B)nG8d4Uk"P]fg[3urpt89=Pg.D<mUi_W-(he=b')uI%9D:@uR=>F1"S<2@9"ga5KoA"7EmceuZMEt7cakL?SpS_-<naBA![mA^.EAaB6k?HfUk:pYG&\K#/;8R*UgA`M@b;5+Af@fMdf0SS%[Y)73d^n$_LQ+7C;N'JpU+$ZKDqBkTREjD%Rk*Y>S[$Z6hpUI+h`(pH7$"`r)phq_q1en4<P,Q%rtU.,9Nbc$*``edDg@+Z(<FsE%;c_Uk;J'>4.FYM$KV1=eV7[Z%oUM9Lj.hGo_T4?lh+j_e;Q;A5D0^p&NDd#SMOp+(jY,J9g5l1=U-GqP3c1o4<qVbQlYpu.7aabP%H_4>DWtncP'`bm<^TA&!=,G/E[1iA;o.tk__qT=e4o^!+W^aZp<QmJrMEgVAGKXk"BY@8Yf/K_M[AfQfZ$$hYhM-_bX[1#YVKS!6%dk?b[1S68BqQ*r^Za/hVCW[a>O>b.UG5C"!n9IViYW_r9fc=bdGDFlml(^A0]<bg)?`H=/\2==e,>?471m3?JrZ+1k\=&"BGPGgo%Y[fE>P@o"3jd8#\XUd\s\r(s65G"F/\^mcF_fDl>eY=3bq._YW0&NT<hoTar?d1N-h#8rcEgHtDKKZ0Z&jm>[ZCh65?kB*0K;Z>g%nlG!&m3YV^O^QX+r,ojk&)f.3!t=Q.q^B9Iq:7!oK<SNqrd3RjSd]/&i*Rks+.Zb>)SW?P!k>V">%t@5Vl>;PXj"C524_d]cbFh4%;d`(<C<6^n@m.niG!hmIR\LiqG#,I1-$_p1GY9s*b6+b+<P`eG<rWoC/_(Ru32<ORhmHoE_.PU9_!m^*8F-2_N^1;X_"LJSni]X(%H:rG&'2H!ng&>a#>V;R(o(CI0iV/qZM@'2Okc:*A[e8c-_.Z:F@GpB\^K6Oc^FDa]EiE1R!Mkbg(I5W[]5&!H'[FQeN[n$sU*pb_%,YZH+N$j!\VRf5'cPfA1V;]8RL+^V->,=PGh#Go@KpBTXSm!Y1aA096oaU8os&Zp738H&)2=c`)3)J.UTT;`GZD1@qm8>GKgFG=d%f`dOUFX=Ks^lIAWj4dKQ.?01*4Rml5IHQ\#a1,hC2`KB$1_'7os6VlCBQW75q9G&#KrOnBgKUl&PfJj<;?<Y?^@?!c#E,RL^FSCq%I5FG*Cm9t6XcSeHm*pE[dE%sG;)g.mMiFruc`P^p7^^eF%"G[6_&f):RP>7]qGD!VT-gY2o_/*K0=Re,?_q5toTEP2I"aZ0ik!n2%8=ncs/=i<>L*%W)GO;<LC`I'0p!`i43V4l!ip_#^caBAg!?V4]^@f62F6C;mn,1cHm(C>uB.VgpoH;1*KK-Cor(&uAB+peD<$Y\K%h)K/5^JY>m!^t$:K1%Qf%@gql#o[6Y>tuNuU41_??YRCqHA\JF1X%_n+)Sku!cC*OrS#RsXmNSiA??8'=-L6>>aU'#H9,F1RB3*;%WO=<=Ki\1cP-`+(-BT=8m+<;^j.X=B4;]CN\f2[jmSW'A;Y;ee`=2ii\op,$e8WLsC\=oo-Pp1c&\:-/r>b^BG,#VOMt<>:+\D0C%K=nElX41oZG*[lg_OoH\)\YTjT$N/3WPs_31i\lq3DB.b@2d7Y:E67:EgVk+H*YuCYA0or`+9hnQYC[iB]:c&\ApF2qb0,LO^\*C%a#*=RY/Uh_O6L"u)tklQR$*tJ*'C*`n7Pk[5Kt![IuSNDC!IW(cRI8uPPS&7j'E^jgR$$e0f$n,>C4Uq0cU*CEUe)_gGRjbL6OQN%;8usCYNOZbAgq(m\X_);d;U+$;T/d%XEYDQXEK!H$sNhl4[ts483S?_J^G^:"=g78:oF4'p>'.d)C*6R_i-r3=Fi-Or,m=rQOm4/%^WHj,B=cjj)nNot:_*s$Ek\e^X#=2XC''^838t,t*f84Np342N%BjfTmYGXCfC55dB"N&Q0804VHm5l^l$_s>!CV.cQ\#.NX%^OR%b+E_`@lUZOWb5o^8Tm=mGqJS;PO/9u_fu-q)mfZiCSbc].o@GNcNN%?I4a$Z[!Ef=Mr`I1c`?l<PF2?*d+-3m#d+fb*u1Y*QWee(%FSr[13>mf-8*:hfenHFH,tMm4"_[k7Cu'6c8dsPPfk$alD!U:@MHdhH\.dc24d*X51R2A6C,EDk5R*c^j0$SFa0WEFXEimOOR98l%&d!6cd1!Qcd/S/+R+.>t;pfGWl:FIBSn,60/$CeHn:/>3+/<%6iXElHW(&>%d*[Zh.joK7QaiFCn)u,)g5W*d.$jAthedE%Is6%]%FfW[Wn2naOI'M0r+;:Ju2eRHf)YI%A4ucdoO,i=O$guFg\/?t480afE-=UX4L+_HDiA%slQU>7fF._N:eVH!Lgn[('qYBgXga>9X%+SnT6ne_]*fAnj[i_A;W:-`QhWur$'[o(Ze_[C0+\%&UD%su2=Z)aeuC,IR2LLkoD5=&]N_MIN=PRe;Q?MR\>7pJ:!?^BOj,K6&.%%&5=m'53<OXecqKI5.7*RL*n;6rtsX85!Jdc$DBW#k;a\g\L[_WJX<>VAc$_)K!f0\77Sr!d'CY?V;U@7o]\7^VMCBiCC6;a.[/,%T+]ea;84'OH,E]k%:]64PZ1/j]o/$9ncTara6DQ8"=P-nTp7n$hSQ=Ia2uJ_N_AJSU?[j2%A5=\r[\$71-sY>%9iQs13"EWY<QDM%r"R*QcYuFQCYsQN<"8H:$]2t`0Am3SLEE;GoD7j)iKuS3:Qe6Oh<bCJ\^fYdSM(]2Q1f`5GjHRC^=Rh&7`Z(in,jD`-%*mCK&^s!%NhG)jDU^-Bj=U*E_6@gXQG>M^h8%STQr>_CMUm3p],jR@^"mVJSBk80PpG_oLT9jaoXUp;/LZ6BE/)cJ^;i0A0]u6S+=:Y2s.!kC%72a&)H`4rX%O(qUNN@k*U>8:=73m++D,LWo.>4'&6C_Q]>>PTfi!cA2ElYa&@[n1QE0k$3#Vdc](sW2lTF`<`)+I\XhPNUFF&E8u%RZa[).>6pFBA[AG6irU3Y0ac:6AUcL6B"\\7hU[uFf^S_"("PkSgJFVrG]LThlJVZ0l?..U\nS)B&bSgY=KZ4c4J=sBUmiLKZ5Th%YW"k\oN"/Q0bI67"dD(\:_Nje$3Fs%+\i0iInDu.25oIuC-[J4qa<Q+OEd5H:D<9J7m-`/c)6DC)E%%AZ(<<%WCK(idi=.X1J^1u%;X.&-Fo6J0YU1?QKL<EP,_ldmon5^3_]5sdqE$7sQLhj$a8#M`omZ5GF^MU8;U4bU/(rrhOufXGf5VF6NNc<moO@Q^4B57Y(;o01%p%%R<Mq;dq_gEu(jLL%Jf5!Uum<O)s9^q2^#f"+$XQ08=TdQ5?^2Z<SPVO%,,@rq.[umCLMtAh(]1=$>r]nHhjDg=(j!)SRJcEsk%(8G?J*$tE(eWI&^rmPcG-mE55rLH1E*G"3hac?d5(SYi*hJ!N#qVI?In#N<V7eYR!V;sgP3NHZlC=IP+[sXbC%5RW/GS]RZ\mf4G%3o;?n:+Ka'JTMe<rk=Ql(tk/Gn@7Q4ALnPM3r4fpeh9ZK`j]jC6uZT0eh8ObMJld[k113%TJLB=FkZVDh63[c8)>GXgq('[)9Xa`%c>8ZKS7F/u)9YUko"U^"S:"[/^I-dU`fc$6EgE#rQqW$+ZBUP(jWmLPJ('T4jWmJZa\km>PW-k<_k/;k[N!8_<q[1j.,*/Ig.A;H%3^.F/Gk-@F"]a!'N%B&Mk5=;]KqX2U&opE:k7Kh8VRG#YQ!DjS!ku/ui7\_7.kI$&IgnPD\TDlGU<i!0Ge8%l_9VeIKTdbAUe*O;%bE9ou:JSbu^K5k;Si"<g\k'h-\4E].3iO_1/ChmOCU"He(Mf"Xp!R*t,gJ6'1]7fWOMF&I"IlRk-&^`ujfhFn,R`&=\mE.soS4M7%s1_I.h7DsB`8]hlFhFt-8%-A0rYE$+V@"TSid5KUc5e.8:@LDRc$EJ7_;7`NMHq3A",:7DF05CH-Y7OfF*1!3jLN8Z3Ym;=<np4_%mf4#h\!,I`,^(o!>te]DPM!ja`@c8.6=L`lOMN*!8aKn!]=:V00Ss(oSs*4si#@_ChKBNXR=nm!h8?sM+NH20EiXTF>B4BN[bSj:%$>kcM+knt_aY/ua]D9mO;8k9Lm)4$RUW_2sm3_faGo])bc0EDNr0u@8W*[G=YkA%7<W!faA[gT3RB,"0'88>Zf$_Y)ZH9F.P@nHU%pX]?X\nla,_TC?daEuF#-Y8%84lT8[m%<Eu[D+'GJ8shAcFkS]5%<Yt>\bD[d*Ys$CS"c>^3R^8rl&Tjb@F/V>3>:COEJUac*.@r%2o9#Z.N3RB+7Esb"N3.pM]TFTNNr!`'@hTMpAP:*2"G,N.Rs33i8IIC*l\0`'0g0kr#jHHVM>fC?_q4pEZ3d$qVsgj_&6"c6o?ln%Ib0%+Y"(Om0:^=Uc>Z`.0JRL__G%?2";]7c8L.\S`7s[8":Y;?pdl`=&dc&\%fAmD@$EWu]H[F`LhRJ.(`fG4M$/bA*[[#"5Ho]1%,iE&)T<3L(HDlu!4ssZ5J%-IWnqC,Yr2Ndi:kUHrL;>(&qjL;Y(`jV6H!ATc%tB/k.,PGSNUTG"X;2G9:?T2qqiRndrDomt\1C)d%pJ]K,TN"[,4h@Q_.$E<*$Gs[K/?g&+pQV]Fapn`bT1OhehKPK#p>kV*b6@Y$m?E*MP0)0%U[iNLj=uZ<a18b$30KYDa,O7KJHY+A%2fO<+?]NR7,r#(/2mE*'7dtoi-'UV,0f`o+NnS%Gn+_U]-LW4=aMkJ2IaY0M0!B:)B+dAon$Uu'3hdm4(l(/HY#mp$m-`^I">LN3%@mhi(''t!D8!HQuO,A0t%5X6g,^tbpgkH*G0aXP75mVm`?-&XsjA%h7M8qH9*`F7+4Rngd51@G_\e1QK\8<tjR3k,H`+Sqm<#sd1%YA*ckm>9;6j%e'B,Yaf+M:4;$RO1eYJ(&+PDLp9$j:(),1qfs?MC4C2!Z<f"*n-W>^-5Ji]hc;<Z1=?$a,TcN7dO75=AO*'G>q#d%/\>XTVDmojDsr[MKW5Kmn3$tL4l.gr9\p8lJTu"!XEF>Bab?L1^2UNJP,;DG?RW=2/L1W62I!p/I4)UJ]Dc9h6slBCo"lj/0p9_W%)e+pLaD6_oj>Q;6-GM"=qO7e+oFWkcac;7C)KgO=*5>9aG_nbnh)N[r_YlebOhU8JII38`oEu:%?J6b*VT2Q![,^OS,lN%sKNupR%Gm"YQWGT%Dj_p8Vi%U]DE:&GWlSQ_!!+l+/e8p7A9^H$Iqi=[kQhN\`DiM99kI]j+E4%b&DYYgNJHa=9I^T)mko5$_AodEgEPr=9%lR"gIg>DR,28%)B\g+BV>dqp"^<2eDNkA4OhDXK6@d.[59FR5D_/]nmQ@1?0a3\;+<B=VfI=(Ji2]1hng6]NL!ks.Lk9g+QpQ=Y*%`$*RVjm%5ge2j^b8`%T2$h"!m"_&_>ZCbFR-+7sg\c03D_mb(tD+8p=p1S@BZ:B`1>?@T1o`R&6baRb$s/7Q^RTVJpB;7q(,HJs"%8>_4n]*SRK<)m(QXoBbJg%[s4-f;cu)L2#Zb$kdPs5u9o7]='b09cln@:>+RlH/(HA+<=9TD98[d4:!>]XDi$LoBBKWo80;7p62%%e'R6-nrb_j_,nu2UW_C@6iYd,VbYF^"7f4oQp9k[K+:kkf%;%^8>F9%\*LWU/UR9NcRAT.if>gB3+-W_?Ok`!Kf:L]:rqe1WG8r,%27\>=]7GtR-ckK/<]hf,&"%]sP@1kr<%GKq1@bd!*0],s(;C#[<c08Z#0a?XBWi\58"N)fe>*6\hB.N4>cD]NJgE?#ECU2!Xo)%J%PE0hDc:SNV"7n8)-4C(NFM><KGM:TahAAh<><kbo04gqs.kRl!B^&]7ah5;rC#u3a'\K7t*T_oC^=k\En/2#ccntGK!SQ492dQ+1%_'F+V8nRn?qaTT_4l?[I9Y('+R!X3CMCZi[OXJ)PWQY/PMdP]f8#A']VK'+H/U"jR"AKA0%U[bd]/0[URP6,6/)a(!)ZO41<W+!K%#iq1CUU?/<CR\8o0<;LqWr*6%`QY7+Y3CB.*&mQDEu"X]itqPZ5J-Q=D:$T=rLn^(pBr#9'cda:[9or`b@*5iOkQ5gQ6P8%pN^N+%RkiDKefo`"m<X?L/,mAh/FlK`JRQ-u*qVWPeLb6Ts,2?ZU`[<LdpFQQ88Y7gI5+VgC4<oV`R>X$k./'gJ/\T2!!%.;3tu5;q/Y,&%KtR09UVsd8q6WYeS#ll"qZnb*qtpCfSSt.S/PPQ7FLDd`Fqp6Yd<&I1dfikC2#i5\Lhum^rEkhb=rGfe^DJj&2I8/L5#JahBNN8?%c/r7+WTh=rk]\3mr"^*`oQsXp?i9CkECX:ZJbS?*p^Qh%,+#/;#H<jM_jLb[k2FX6UU`?XLJV?b%s+F*4)+Ed2Q"h].TQ#h.mj];%W%.mg5A\#B0FW_5]_Cd;T!:o%?@qd6CPB*6fR#KgMl>fW6N=e_r?0?II@(;D-,]qL&H5L"NYA0@r(P?"k^(-GN8kZ,buUreZ]a\$%dG[DJ%m((YO$lK9Er=sFYs5V,j>sbj)n<8#r7;3iiu;T_B":kXG?M"0nc:<'Vrm`jI/3?>-M`NghF-O")K5IOCA=J8I:jdCUAM'P%2gVPJm3pj3G-#-&V6^(p+3(b;No`7<%Pt2bOk9VUdt]*:XOLteNcA$6OZfo`*k-;2V3@T-0]'mi0dE@g=m/GeO1u.p\&c>Sp<5F=%f@G#N7O::k;DNAY/sX>*SU3mMhYUn6h!"?Dr*6@Oj!8H'fn0Q%F!I18F;MuV]pimX_Z9A)SM-=5M8WSqlO>p4pN$2H"Op/!g'S(5%HVr,bik7ieIb3ke;Pj$#A5S+ak7KpZ[C1K0N:lnZEJZOIE+.iV/8hPlmP\gAUIiaT@E=EMENjS=\%4@1d_gpK8\FeW+)EY!lAaLh%,A]82583"XVu$a%8OH4(CC<]*lI_T_NL#Nn8/daV237dKkq,lO<kar>?$7A=nNMPS\W;)+S\7Y4F0X"RZ>-3UL.->=Dn@g;Nh[T-%\]dO)au<Ko[="a:iqN(DB'Ldif1)Q;*QtnhbBmDA&d].\LA(#Y3ct>QXJW%Ge`e$Lr`8X@TD@V5)$&j,E+[!E;nF<Q_T'nUFV+Q.%9!&h$Xo)%qCZ`St)l_jQe87'ZV!?@3g<[!#7jbN%GX.s-WmdOOVu<)[G=!:I7sNkMoo*SFS#rnLpG4A-kb(HAEh4?e@*88O*>V<8%8np"qf#hj#+7@J]+0:\%,fX`R;n:2dI,\2,Rpe(C%^?#NgL9\1[E"2@d1BMO7m;m'&NfA\^"jS^`jE@u]Wf#MI.a;+57(9#[<fIA%bJb:&Sre]<7!okMC@,'4<"2dN<hjgR.3p.hfo:."='ML8Gl[Y(rVB7B,(e5mm[Pnj+@-r`S=>H!DoQ2/h2:l'>.;$Sf^&?Bn_Dfd%oig\:CmBD>X<SiC)lZNC<U6;,$N.h-W/1XFoNIcUe5l?#/71NDR>SpWlE"/>SC+$e'5J3J0'QO`P/t+!_G&&(dpCc34(t=l[%;3o%W?I_7<(o/24,lrQV!@b:_7EdL[*/7tOnD>[K3CDboQiaV6Nf.;Bd`JZ?EOmDm=k4V\_3DFJk+R*[-WS0(\ni/1`[fWCh0%5Bg;3d%drVQjaHs_pn\4N'#=r',eUEupiD<L$pO9$XDV2bBW\(Nied6e\&H-Bo[lTCT5Z`\3]^LgDV9O+pNqt<5O_^<,&c9;=).5P5cI6cF%@mB]?Ks*=JZr..:eE[&4"]e$P<JX*?4JS>=&oaK?]dk!Ta,>T;XjftWE!?BF(/sQ0V=n-hej[I?oRG<u;]?I-S4k^spq1A0^OcmL%bt"IMe+GiL17dCYMK*.@5$]D7*uM);o1&mn9AB8'#V.6D#E1X`^-cr!74aaB%-YE4cPHlACR'53f4nD?2p[DC98C0YOgM)f>P[jZ%<MEtC>kCbeF^M=h&b2UVOUce=^*rFHXACL5gI7&%!@L)8Oa='-89+p6$]E%3#G-JpZ,7S`,Q.N<:Cq6#>[pgtWD7kj$Lkq:LtN/H%1Mi/L#8pS]AST9k<uRq->5"4N3SH7$dNDaIFZ!S%]nZHh6%o,q[^tIlgj_0'4"!f.CoopQSHC(A#t#6c-Q=9lr+m3N5F*0BX?SOr%/p.Id%3=X0_f9jLZ6)-Q4HHsE!T-\5BA7Ro%n!?Y@O4,_gd_]`V?Ap5Hur\WM;m6-+!&tU7C&Ps:;Ak%V57_frUt,9RG(Z5S]U^A%fXZ8hVouPIg\F1n\`8+p<(h`8h-dnE]2H%=ql=uPVQh2=93aNd5\ft!(CYi>,Re)*<P?P#Z*,uKpK?:rl1pi#YX5Hh%#YpQQC<;'%C\<)A7-NMPdlk"$UAW5sYn>U4GN3T4hePaHUJe.ULDS_*UifAKGk_&+jXbf_]<c[.S<c!F7g*2I]om<(2:$J*qs:/'nocf7OKjf"%N*P1TGar]=>B'm,4omZ@jcCVso4\"Pe81E!7@B&3on[#Qc\gSj>;s\[TPM5CW>3<k2=VII(JN*F4f)bme$0u=lh-##2?:PB7k^k_%JA=`\I1\t4A+_%[D5IF8ZAtirAn1j9/;;M`nj!h1Ct7h,/K0uD;*$YIlXQiAIp22\O43%rOVE*)`RN;=<45'sAE+<V_XM;F6sa,l%E"6WLG8^fCRB!-VAK!>W\S`51cFql"^:Y!;5V[)@:9$%8_7HEeF2O-C0c2_lGDtX!#565!71]o;#'B:L_SsEY)eng!i#[SUPu-:'%S7KDId'FD84"?G'(so`h9TsNb!kpStdC8-j\[n]H`rA*iL;(@rdbS;V/?>A<#?%)[UW[RMj3h93p-pmjd!e1aT<VOtQOCP\(IliN%:i-]:>jBc^I3"#s/jCFdWLU.&LP,"R@.11N_CB"IK>]?f2<!@#,$41Y;RssR"1f+j[n<b4\"kV=;QWQ3*21>XEAKkV%d?o*eETE4%e4FhLWlMLjh&<O;8])<4)!!+&BF_g]Y>HuIJ+Ri#`JudVDbPj1Y[k?"8C4oRN<FZ>gZZ[6a445%=<9$MUee[D>cS?tD<TPe+%=t_%qVeAE#E=Ldqt2ou_;$$_V&Grd>Fk]\-(U,.iB6WqW^/kt.+Q.TQ-BBbqYFn("W?uKT'"-t#mW^%S\c-DqGl6R#;LX>lg<g,PNmYL%dlkgBDIEKLYJtj'S.d^WHCjc6g\^Zm)R#WekXT"9IZamQglmuT^^eGKE0;J!^\`/TeI)JT$?p.n^c6Nd[P,*mW'dmsBCb%8+cdI\%8FGj"'SGe57^:>\Xu<fAEP#Bk5YBHpkE$m.RX(+R:T*''8*$J/[pMgWT%SV&ZhsPqlDJcm2cLs4W]!Q>n7qc6[5NOdBVqrV))+e?%s6,4CRKm_0WB*T3A(Ql?XgLnKcg6g#76M$D?h*1mkAk:%<$pn$l:IUinki06/)MrW*L:oe`c2i<m)asM<[tG<>&WJ[0_&':C/H?K%#Gje!ck\BejJqeo:+]hoL\@f[VUfqbYIp*Y9!HlHF0@r_$N2[-2<i<G-l(JVB%BHma\Oo7+F)8@Gugr/3F3_6Nh]g2PZOUt@]omT%.)+BNo-(cn8L.Sj&D0RZ6hF:;B'j8aCoA16Rdj?h[FVH(8<p2[-(pme3)@.=BIe^'FJ_RJ%PJ)qWZ4t@&6jkcEb92h(G+pl$Pk@:%h9d,/rHK5D?Ilp*,k!kq<pCQ'i[W?cCrV)8R]Fot>hqi3OpEbb!"ec()P-aj\i6sT:4;k_8Y8X!,i&ZTki/*7&_&o2H!nU$WVN1F%G.ZNZd577t[[m51=lsAY>+_'icl_p`H$1Z9X<!G)aQDEjTRa+ED4W+4,5BZJHk_4:(Dp0mMt(-0oYNhKB9oQ1j^sEQ[8T[8n_Zh/%/;9DmH<IFMD/`5_f(7G5nEkc'I#`Th)?hYR=%^je1]+3l)nqN4N>D&'`O,SkkJ=&D9CJH9>g0sTh,Fo.k#Rcel]oqQPNn^`gn!,d%LT@8!\p<1]o4#tX\$5dBrRnXXHsu@4_sQPT]AVf%XDNI@[-`3pdEI'cT$/,IQP[E6+"o:lesjk-Qe))ao^_"mSOV+CZaFiEiq:mn%Or`toQC^8jACKdu-Pr*&.Xn&`]PMJ3_>Cb!b'sAr@Xjo;buAF^9qmBnl'#cJ]ll#Dhg`-+^&7BUe9(E:fKAF\fmPM5p>3O_oJpus%RXTVZU@E[??^@&(EaP+KRd%tYm-JgU2mZgQSsj8!jh;c'['Re[hK^X5jmr;&j-A*ElDaO*liG/9#MF^>oj`:3q87D3%rJkfqXrob%NIH3C,J-h.\?dsRJ%qW/T=\0i4hT)WgJcS;pR*C_[=\!rB(aY;>[5EFWs;F$?HmqGZFp&'9l;h)5CW<LoA8_@To_LV:SfFSa'5II%Z>%PG]gh8c[tW8^c/M?@qYA%>`fna9bgucG+5$Ugji,JC2)XbR^AY@-W>6OUSikh8SG+M*T9_TX^3Qe8NP^GGjD;[!bZMr(2W#/"%]SE3T:)V$)dcu4On7uo+SXGrV=3BB;78E>\CO18KA*Mj^[Fr?0&mdI[\bD\@X0o-,QJNBA/QbO;^@8MUWmc'_BC=f,5fkDJSbou*%3'CJ+HfWIddX59S1<_EG[^5T$V$FOm:Hg\@MMi"ZngrR-C>(YY]4(<W:S-[6oM8-Kem:uCe_.?K17@gOg*"glD`i==Ci.bG5!O=m%kBZfDBsII3eQ9b$B>ZR`cAJAuTh[,-SIKu2DSVcf\qa%Sc#(asQ0]ZH3ZBuLg[7T+HQdHlrVe'h4TFum>!DuUrec'pk4R/\m,>:p%_.fU.ftCbFc5]rDYb1I"I(2[VMBCI,Is^&?J4QWILJ5ISFXQe(l,JVe@397;j8HA0_iptB5C2nehVpW5&8%N&?9:!9]Nqf"Ds!?)%NRKi[_Y1V)N$7(-2-`K)j4Pe1[G^@r;"bqm%eg6(Jlk](28/eGBmV1n/Xn91VR&O;XW&RSkF$Zr>@'F*h9?pU[b;N`Gn-#m\4;@)%hme<I"-R.Yd\Y05348L40K8Trrb1uSh>=^*A1TmhL5j3S&ahhgltf)*d/h8<HKK1qA85>;qj%>^^.`/u^3b.aI6jgHs.f-?Zh&<N%41BOKko8d.ULJ,K=S]bLZO[Ps=3Bs[GMTgcf%/<2.k_D#4[$90WG1'T\<C2_Rgs/3f1V2ZauE^P=1busoDK$gdqig5IeP5rSh/U!%c9Yu\UKKZb/N$0RUugC0?0fnON>LDL/VXWD.`BGUO$I%+:S)HQgl*"3q+Pg&dAPGtO4RTk`CabBgLbWCoQ2E-'-'5aiFWS.CF@;D%%lX!h2?3@HWTg6,`nKSc39k:c[9$DsJ\1ECE8D)U$>2RE6jk]$Pk-)d++/CE7H3k%_ouGtr]&d'FoDQ$^PB8,GPX:iH21m`3].ok%iR-hDb6QmVS^jha#A0%>Gl/\2S9an;7gJDBEef_DSFSC*k#OiY.HfpMV],I-r2`E;`'us<-+[DeRlr/^,q-KV7u[EGrf^tj?,`FJ%p1K_mX/481,*$gO>n4.n?bVoN/Zh$opf!^EjDe22+)ET+YEUu*1iW,ebFa\Gh"OJ8o%VO\*7$.&Kt5?IZS;>;B-,Up:Q<W*XX3i:%otFR"5KrCgn"2_;[T@hJf:CHkl0)au'-I"HdrTDtrd(h"^ZnUQ=l\V=?s!A>IUAqdMAc9VA;1$*0,lQWhETK(5$HVeREVe&+.`Z>%YDoCR._IptpWM07dCEkD\(<bIc'ZiHAG"?KkO_hq7F0T>=lQDoQ-HX2R:qj].l:%MRH?Lhd&ZXjd][ZGLMQP2*U8f:GG*RJcKUC.%oV.&[YG0k2"6i^/c4K$X(bf_eENg1:?27IgHgd@d<G_KA>Rq;EGO4;Pa3-WZp"c0MXHHu_]SCRD3nel1ZN0ts^Npph&fn*\8p%TB%8,KR")Zb*MH*f6kVL*:?PZKk@GPAi[`,Np;q9`6Sqppk,UW#apk';j,EY%\W/F$[<Rk)m6CHHnZT!>V$mqDMR[`V#On"(h[cIc+h%%'S)B#,Cm'%rAGl)k&QHhV%0,/jl]V^h<,&,?F%MZ5<$Oip1J2L>D9R#R''%7OXfX::5`"huE>A`>BW:aqZ(b/meD$;jYOlc9'H)%IKF8BN=bSChdcS@'EEA$@:ndbqWiM#GmpFJ$P=(sSouQ;rjn`hiLJ)i>6sfXTYpZT8^hmRn.S?`F&X$@!a>6#*#g;U)/K^%!>_Qo%):.>*idDRp05L74Ue\WSf#"eO).]b8^#P<CAELV-T2T-cK=<M7\Rj5P>G#4d,U:F!EFY;4qt9SZm]^j'G^7]h^%5e%mJ@]^@\(-g%2/^LALfl1i]s`/]G#Q>H,(nfFbY^2!Eh?[@\.?[mIIsM2D`9PuS+7=ZDWNY=m/A@/-+sP0_@DK2gGHRN\_1ISqssOn42/k[@@5`K%m_?m1[l,^O:U]CuH9WuW:$7gpl$DFOlojVpK<i;4Vh6(ZS^j"]NicCI!=\eAYR,YP)DcfS`PS*-f_h@#pTg9Ja5?_fO`=]TfuUgR%p\LZAfph64p#]$%d"^bM]0]!*kB+b.8b_geaG/s3kXdoT9]gV=^4\/Ga02!0o;18=Uk73IXGZ\SXLk+M\Rr(1HCV<0Y$"/dE]!=\%he.+Qg$eA>=%hH,q8MC:oEe[TO%k5IZYrdkT!qe&@=*'$HVL![qrKII-i59?cI?r6:ZpX13P\9C:FG^SgrGuL`3\gPgnX&<^h`W0%)ju[I%p)Q!Hrupm4aXc5ECE\JO08qh*oH1?#X=mG3p&S5gO6orVa]-!KJKuhi\bGi2Bjd!eFZ0WkJ8sJoI^O<^*pb`H6^,;8.;'*%=nm$&%TIh=qf_`caKC$^N`XLIX]ZpiXEAmer3WZr4SmjZBo3])p,[Quk/k1H*p']YUZ._]+T'FGm*'2e@dE@.K/4Q7>^;I<]\M*l%O722]WpO`UFAVKFqb+9ik<JcK@;BrGp$OT+j[8-p%QCaZ9P7\Hg4,U84t9#DFG[^)^`Z65CEMp^>;)'&?(_(C%)i!eG&R'Go::R_%cdiU;,KfkG-N']IY+0>n+\-&:\BD2dM#2R*3O>=6i=@akG6/Gt6EsEHLeQ&pJG7+-UG#\O=hLR%CCaZ1@bc;+oonQWo08rQ%_UoB%QQPXY1OFGGpJb\rAbO`6h[(r3)qOSL4$aYf:M8B^#a.98&"]COgPk4O22P:9j_LHb3,#H8f$0uO`A\=VZ&kO<Pj^4G[s,T"%c682%OQ9bP>::H$cc_4>o4"jIS^.O?Jo\#;I$l6<48h4q)kW!MnRVQu\iOd9pKDIs62&A0pUf2g$.G5j@p9!6Sp\[Dg+=u?ZHbu+ag2Lb%*abFW5g3YO3f5u:VVR."n&j5?B`uc,FuI$8S6K<Ep&1teU(5tj\a$1)<"e`GeUQ(@g%kB#b7QiYL/ZRmVr?6GJ7ql"Da!ts9@.lY%*@Q5LV6]^:kqP8+fdf.$ooT6ff3E[nfKG5u'>&>k6?;PPqr(=F0/(!8;-H)2EHJM!n3/cORnRpS`"IYHf%3R$+5@YpG>*)DI`BT8%_.aViIifK5@=;dHN=#@9(AJ'8<qbXkp>,-@]XR")"&a9fn#m`MeM#V9KC&-^Ci-eTEL&DQedB%N8*A)B*@F"<4sPUsh"@--YMNk$%[[+a_!T"j2Ykb,`ji1QPcKsuDIp"1JooBFBmiKN/)c9(#kD<NR*g:m?q+^9rnT=d.U=QXm'ghH4*J2q)kCp/;&[9g2pdb"@[/&_K%XDT7.qZlkFbiNGO_4u&nQq(@"<d0.UG/]2Cc)m3\`\HuRlKk;CCglMEnmXa90-3j^jF3^#](UAfQ\Ao=kf:4dbV(($Z:=?R@;[rE%cS>aY]X^r6n+h\qqkLO2Yk,H-Bh(g`$WP'tP,F$.T873egR5a-jWEZ!K3,V8>V/+pDD!U'VXs4sp\jsRX4=]*48,AFLo"#.;g+q?%\%?+aZW\.Vs7P4h;B<dCgs"pPXl.1]>YCR%;:PGVRL&;W]D1rGju@^.mu-QbeC1I/&=";DR-Zf6J`K!H4h<k+#jP`"4.?1On'.0>%^ANTgp\/`apE&Z7NU7`Kq7QFoH`Oq:d>L7sDlk%^4J#^.I\K#;%LsQ8kol>T)kC]PFNdFB`Kl==kU^Y1T._@M(\_sNR4i(r/oSDK%AS2OD:'=L=)k:Kj%Ph@pG7rQc<[r44'r,+P=Q@m;WZVgRl-WaYp7Poe4]UPh4[3.WH<,O);Q^oKqFhL(S3:\*Y1Oia^3T8@Zi.,c%8`_KdB@UU#cTF#JcR\+`NE>1gXOZ<Xk:YAZ%6"lESL3c)pW,Yq(j%--0`=):8;fY-YhR=5r*U:M!.Oe8<A@^Z"LC6QRis5qF*>us%^ES>HhbK^ZVfm)0,&X$cWdTXB$T?2]UW94q@-_$,.@2JbmrE[H*5ul+ET,I5r9*FiQV6pZW*-=ukAkA#nP!gDZZe>pkIVUpr!2i]%dp2%gME>*fOA!`_V_:T6o'R`ScBg]8dWG3E`nf0dm'AP'hYiO?2HklhoBK3@cJr&k>hCtP&Qlt3l5MJ:F2)5&Y\WiTk)hWihLYDY%b,$[cpQ:Sr\XAFL-91u%l<Z*T]=ji+Y1k4,hM!?#C?;5Hj[F"h0dV$</C#\V]`!2X)>`r6H"eo0W6ZsWnmEK3ld+'l9jQhaHY44C%B'%:k9_7HU`/$Er!E_g4p*8UJ=Ej2N-*-BNX]UXE%sWs>io/j.&ME[u9^Qrb0mcY--26uq3DLU1i]Ui08HjM$S-3eBAb5fbT?4F,%?N9!u`LO>Gh-4*o080;cqeV5TS>j-5SPARC0#ad_R6+Wr4ao6ROqD5#P:NnCk1&R'(_kilKV5sQVT7`_#spb`Ef78Jqmc,3Q$0ic%S==f7*lLq"Pkt7J4a^(\"aa35(4X_Pn"-U[meYgNQI>>^]&pf2Ic4;`WMR8:pj-R3Zep4A>r4I07WtP)C6I"KWK>/%3%MVODqiaW%jVGYW_U@<+G&chSIrn1=Kceh,$Yr8?(N\d97JtU$H19bJQaQb#NOp^+-P-&%k`5'#r7-/2F=C6ZE,M[.f?l&ac3f8GHq7punb<>,%h&EP,_Xi-7iVVD_G!0*8gFM?%OJa,jagk&U`[;(]?7W4,s1Z+8h'g!TObDDXRE6U(]-2I$9K?HgdqGlV@,k"hEaRjLX.KQrc.L%L%,3Wo&oD7ucJRn=dTjl$\nRfCECj]DnlGjKITG.kO?@=tOkIuAP.\JNH8aV"d'@P?KV)rL.Re^220l<G/,5(GS-@>Z`Ia;lECd$#`%QIGH1<D$V2:C%oaa54\b-i:t[4ZSQ>or+n3+L(GTqr,Fr@(ptZSjgY+DmiK^5UP;Vrr$m/dJLQ/Q^_?2AAb7IGC'npbpEUB>UT(3%H/;gdg3Jd%/6ba(!ckJN]Z;,%^<G])+,1$6ahb,/(:aU\UmdY5:46;aG('=aJ+.aNkTKILHf@.9Fer/@D"UsJ*H<Bg8u#pVZ,$ao%e^I;e5B<1Jjnci;ZX)l+%(bj;1YBkd<qBtWa//T`\"qTl[?&?ICP;X74NX/fM<">OcqaCq5F9*BBZRajY%R1j8+5BjMtpVdS`(jY%CU,o@c=M(IbVn_3K1@G)MbA-F4R&7EEQ]".EVo-U@^hGpBA1s]=.Ddkq6f3Kp*:t:oqr&h1lO<YhIQ=p>Mn4K59?A<aT?H!5^DJM%dam.=QPK)c?)uDua"jkiqgL0F^rMqtU\E^gESIf9lQ6W&hcN?kf]NmW96CJT'ce`N8g8X8GL(-=IdrqeTB@Jo?iF/aqsgk&>+hc>%pW[SqSiHDfCi7ss+i!jGhJ@B,cEVAoF.IELqtA'ML6Y)CHHTO&D!lK7_8haSp:0hX$&=Q;`ileK?h"^I5$2a$lX)G$5<eYufLJNM%_mMi.mT4o$KfTLhm,hdFE;&Zcc[).-%b>A2P]hG?DlY7`\VJ8BA!Oc,eD9dkm724=eL!B20;T3R@^t\/J;)8Gg[4FnHedi:AGpE/%*j/<%?BBX#\4,I$]t9o^DEbVo`)eS#m]R@cArH.^T'Ni-h$64C+fr)JSiHH\DgCm=>W[#2l5c&>=X=#nIP+Ese1tI8]02QPc"%TV%(VdUcnZ!N5B(jEi(Fuh!?Cm3),AFDe,lT;Gd;aLAdC%b^orWPL3%B@>61C2Emr"Fdgk3-J+0Dq4F"?j[eRJN,E:U.t]7#8)Cf\d1%d[a/Ef:G)Wr5]fNkGkW?SNEm5:%AQ>GKJWiF0ptKl*RGhmocR$YIB*;b7D$-W$%W+o\$P"BBAF47N8ap%fLD3B@Jt_]jkfP>]0.u%VHP35%3@RW%k`i`D!?q:8CrdE5l\tC==(YZCcQC*H:F,OmUgNqr*ml9W>p)^,Ptd"l#sg\f7!/dq!.8'l-6qd;kj9gmA":Gb13Mo%4l#\@]Pr2lb?=du%":UF?Q"(c+PGIU<V[\pQ_eG:pmCGP[8o8(e1+nAOdFiF9)dOIhlAh%M!ZgAIW41+A'rpL^A+1mNFs03^M8b7%Pp&*Qj$6f8?FY;%J'IbOEC8VU]4@Fcp%5#]r/q0ugoZi7dG<1K*"n5F#idYAC.ln$AXTS"k9.A0@p/cuAmL!"Ib>od<;S]6:-pco%H9a/_B[i(5Xf_N)Y]9)2Tu#e+_b$3o#&gu;hQO4h53QQWO9@)7[;(gW-uTe+4/Lt8FNrf[GhJ#2GoXmT]gocOB#Em,nqS$:MVc(7%@J'ZO6,MJ*Tl8[0r:stQV*Da;YM71Js$g2/FtV5Vd0@0Xn]<qJ^<\[.(JP4-DB&fF?$YpK4&:7QrF1S6kQ)Q.R1cV=KQ6PO]QCY%%.;a4qjUS.prN1pk#!WcAM*r2\;g=.8fPHi60nn]:/iMqDOJbQ#@E$&Aa.j:g1eJLUp0H<lm5_/[8>]D=_/oEQG];B>**)U,nmIa/%Vg6`"RIUi60E#7hL1ZEtfMdpM#;JDD3nMX^SY:+/B)'qk&+t6.(bR]k=he]-i,3kJI-8?&iJ3:eRQqh\\+4'R2\L$OWDsO-#VfiP%erZjW+%ZqsZXGDs:008AnhLi5da?VfRUTFSkA>1md_0ld6gScN?n:)jDC.N`-F11H9[1b-?$kD6[:I;'Y)Gdkje_U`N36s3Mn"(+%QJUd>>_.!SJ2(RJ%^3j@edB@(A+Ms2./h!OmEML2Yc`^(D\u6/VdcU/9b!R_;`PEuV2o7ZSRZQ"D5;KCSo*[cA*N3?=L9C/lCpbF%lbRIl9ui/$;)&-W20PNM%Et]\2pm:ho_pnPo-&?_W>NS@ma:#WH!bq;V(nEP:Ti,"[5CBsk3\fa6<%SI,IS!FYu/c#]M#oN_`6]*%7*[4[FX(?TO3KX9`=^60*^oO<ZpZ1^<8WK$@OrF+),o2=3CkoJVCsl>+pD%]Pj1VB[HWf;HPbQbmFR\(H;+5Ge/;d2]aKnXQGUD"%mbqR#j!Yq3M%#u8cMK#B"JpqI;KRE!s!nY5SC@(q>i3RKP.r03`2AI^*aV;`%'SgZnih@KM$nQb,8[hK(/m$=;f(7>:5%]`--W^b%f=noi*9-YM%-cPpUO/6EMa<s&(NoJ$,P3h,:`>Z`@p_dO0&)Vi^Jd8kG&_mIRMXo^7`n$Wf$Vu@+ce.\>Lb0OfX]PqH]Hs!A5`jb%h,302`Z]JQ'><"1p3e-QpQ0]*C>ou_5n>=:oT/aA'-Bse.=B,1qnK#^nnmV_^DK+`KeGn+XL)R9I`aUu-;Br/E0FoQ6-=E"atSI4%)5soTQn%2&Bk7GN:-@b&)bu8S0R\OhJHiZ!e+9XTrG+D/qKQ_p1;$Qt:kO`35Adt+_6D@rj`mcT.C@boi)!X>2?Fu6K!]%b?HP*q%ZtGkWath2JD>7/S[&gY!fSW]sRi<2&[F#I8&&#'O@F,O^AZ&6YYdq`]8J.=*m2"]*FUE!.E(t5V8`4SA3eH?,hmScnj?)RXU[UIP%?Jktf[j_Sq[.p6SEJn\FZ;8g,RG>/ZcoCC@83;icEF.@qR8[e(?'A$b<'%h3(h\(/m8IFhb2RDoPlS-@T0SFSW3i<*]V]PoVHdrm%TiK0(0Pt4<P3$@gbG2%QS+c/X;a,a9SHqB0m8664G"od(G1$D77)M]m/6hr*k#iO5&q#u1o0g<uciQ0-ij>4o"cNV"o.4;![]%FW%\5s4Y/oT2p$p'rYd`N$'*`4H%$PVR!N<i.cdF!)0eB?A%4>Z7iSQC)A?p!0)dJ9c*:$2\6;@CksJX<=T#Qe(2>eNkK,=8;A$Nf$8%RC"e2:ds+qn;S-Jkn>l_-%0Ue`c=Ic^/>#@#;g:#7&>c"m\NW)"%<Jr$=G%B-EL]?7A-qLZj!*fRsP=s.%nD1ahd#)TEsVmDot'1%q/!8O[1O#H]H4m\csR*)#8VQ>d6N)8EM+o((#!Um#m=/#AO)-oa*1gU>67(;<(%"P@W9aTRi.@pO&1J^]l`040%=?\$S@;#cNIH$%408eW]O!kXZdD7pAgCkf-<O60'VRO``</]Z&%88-8`IY(Y%S]jZt,[6PfZVb\13RU5OaB[M;+eF5%rh/0W?++P9_ggD$kATgN5!9%:e\Cm$pcrbj$KOQ9fRTppiqOS:,W6F@]1.%H*eDV&I]Cn3!c'gfhd&3C2pLOigmlN##BgC%)C&DOC1HBR"c&$\f(]&mm'd%`CT_<%@0<7O,A[GE`4YlrdD-H!CD#VjK*7AKdWR@$8B+DM1rOSU*/\D?a!"C+0pi0Y[,hrK]0r3UDt=r$B\t+e_O+paU:A%W+s:oun3t+h%UcGA>d3:u)eDLPTUI=(ZOPIeZX#\,FOOPm'&,bZW_N;!BM<8'(`J?m#nd)u_dC)ak&Y0OtdUu;T>[idj5Ib$W5#;:M4U1^MHR+^o%hK-J\/>$%_Te/S$dB%oZ4"5s'\]Fh:=8IbsAGQj<kR%&[%>O8l?@<LQdP4lWdLQ[)M$@dPW0_$P6-+VA+AIaR3eTlEi@;gF+^VQ]%m#6#j$%M5-F@>=fdEtMc&r*B@'::EG:@=g1RK\;?9q+Bu(:$M*Es'N/C*7s*@fTWL(j^Ba_%KJ&#.<b/q\,2&M[gl6-XIqB(llr+%_%Cs,@dlY9gkWhA$!<C=7tUi!`n2Dn-bJsngO.q<1l'>R2I)T2BXsLaN_$'gd9p1)&6PB3QOEHjOeBM'`$!Rfo,1+.pt-WY_'C?3%_3r0d[('t"_Ueg>Lj'*c/98]q"!PV6ilH=o2$02hI>F^^U,@OT(\mni#oA=(0e=Obb1ANg""l;Ioc^GLP9P"^d!ib>X:PYq,i_:a%O>&!:!aIg_l)>1QM0'1O_S@^UEmiAb)[oN0&S8a=#F+79O]$f>Kh*oiU!,%q=<^TKTSf!9H0*I$C_3ZkHA@:&SfH*88Ljmr$LMZA%T%8l%M-6:#D']&I\?mmUc%K)K"qT3Q#P,s;d<a2_akPo(5T>=WP=a@^od$CUe((::Ad^ks:#"IDp+;#V"_X8C^juoZ88m7EZ31r\%[iMTH8cI+T)=qYVOD;X`aJF!dO^O:AKheECYlS=OMM6mrZR&%>D:;@]#6A+E4,3**+&)d'*p/O,I@tnj>6CJtXn[Wf;4e]dRX>);%p*(DKLCaMQ@B_HhK?iR7P@Z4u*An_m,ANAR2Be#J$hsaD#"kc^KZ.Y:K.3.QEG`[Ao)aOLBp2F\#Qu>2>[Q6,!HTWVX3-YjUj3$=%;q%$GR_Hn\L"*14,&l:#$PV8kH6jJ'oH/<oEPdASo734LE==0m"5HX,K,B[1!bo(Cjs^Tg(T8P!&beT*&o3)g4N4b@#ncL$4GX"d%hZ24H)R(uuU@V\X@HtA;e&6\C\LXmb9c#Dh=[>66'3T<=RCd,UWT6$PE?NLWrl@DCM$VA2nZ3:I0TZjSc_``[6pQb=RY^$QDR)Rc%B^oL[Tu@'gk[-):9XZ[kp=`b+Hu?1j8,)O],=6\V]4*r,iWKC;"s-6Eklp&r.,,A[U^UUV)/QaudYA/rMb2&ngCH3NJi<C>@Qu:.%48<9-OA:o1!uSBhaG;T_ho+r6fPnPHnBo>(F$q(4?,S<)m6mEaShd./(R[Uele'uZVRrA-#EkDtDe@:F`,u,7('@`CaV;hZhQ+V&%72GW^nE,h,-+mAKL1D88dD<&=MeWlq]D+ZH7La_e\K.=nEAZ(E7PUlR]s3));fGE&glq+E@^N\[-R^>+AmYUpMpU_od=-&LJ=?r!%]80rm$lYuG8850al;#9`)@_EQhPW`XSVL&]gV9Np$t"5L%I(f3+'L3U)jt<tSH4.6+J,IjB]Vgg[<RttV2:U83n'5O]AdDl3&lO&%R(5YrNWpKiTF2T=rGAq#_'YEaKo:1,rSRg?*<uFXMo-@Ts#0mBhLF]qV@=?9?^q;*#sG-pC@a9'ZeB&MT$/8C?O,"g_B_X0Vi;ur%6&%>-q2dRLED3l>&/33J()J`jq\XLs+pk'ef)>cn>CjEFH8<Y;=X&unmVA;F(+-a,RPHFj%2hgcCtlCp9c6;g*DFM58D'#4VQZOM%f+u#G*_X-:0_oRUXFiqS1Lop$0T_!\%.I2LgIQ:!+qsg,#O)R^r#d]R]L`c=&Nl<<$Q)J'M]o"25gH&CiFn"rTcD:`4'o&NCLDLL%G"r3P,h@Wq%!XWlZ''VFgAF34mFe'bM]m0%,>3REHa_f8`]"!A@Z[%(P^<At2sEdkqS#K5)t[Lr2MFs>_pAU4BRX#jWXqSn3@.N4%?ak<``tkVKV3FcQp9,ptW1M6F<5b`N%ZLfdP=UU'I.WUs>E:"'e4-m&S%?,-?R)=Xc2iNIAWk"X8d3/O-8US^=(ma6dc;1u;A'4&%lt)I@B.6'lTts!%6fLQPfg,b!>9K+Ae*qd/37-aV%M7dl,hupu/4mo$K5$+[&7Pf*"&Ht>ck]061LM&p`FKfaMh@)mDpjgR=K\r$%Q^*2TD_$`k_E#E(YPMY6^`_TD't;")7Z3=8%SoiY+sa"GArm\C1(kY"0.0VW,Fr(oLeT.HQlKdnFY$cPcd\PKms>Z!&ETaS^bmYI%XhfPgZoGM$&C_nbMEGi0DZdL:BX)EjOtT*W"P^<]V(T45V.TuV4NPC+9kg"(jktD#q;q@=8cM['&fs`m(I4)Y#W)Q$QGf5+,=9.U%8LSG,"@=Y-[R,+fZ@.^C6YT/7"i]PH#+AY^=9:mB`0)hT(E)=u[k;b!J2+G7L*t!Gj$4?P`Jrm@jAG5_U_I@B^h/4ec=ORZA(d.?%K#!GsSfd>Tn4bpIK'gi8XQBfjb0mX',39U(p/N0rHChK(XE^^5E<I(-e-]`U]s.EU.MR6<1u/Dh7>:!Q#X$pTZRpqLJ^P*LI%b5m%Z$-Hk;ka>d<`=&E8$9ChYO`:cj>qT6;`MTLlmMjB3!'[&=U-9oV&@?5!h%,KPYCJ6*AVUZ&';9m&Rhta7Ih#m$3jbQd&&U@^Pm4V%IX16s+MBffV@ef/U'$lc6suU_%AWu+@Jj;45QmCT$)Ilsf;Z0ACA,RP3YQL5N]"Ag()W\S@LND4!Y1`h#"ZP;6.-AI$s:m*3"DV7%"@f$V"I]TB&o8hIKjh+eD`PT<YsK?8!I]`5Q8SfS(rrn)O/%/q$Z"6Ze,X1eKK9Eie7)!YL*M<OCC8NXbRR2QRmRK2dRXWDqA_tJ%4A4Z;Y2[5PBa*+S%&#=?HV?jp#e;A%P&9%h)'_>cL-4N(AUVnQJL\utL-Y0[@slX9(.)sGg-U]BU.<q`AI'+u;E7EG\i.o3+l`n`%Zq/1sdAATm,)Hs4%Xa*C,01*m%W,`J3ZO7l!$7(T>b'7L,h8f*@R\@T&2?'epAdB\!kfZ68m4bVgYCe(?P4MZ(^F_a8Ve/&B5fnf%oR#$'Tmjr$4:*XgXrJf#.(JVadV25e.&IFqC>OLrmdS&p^mB#PLB%fJF5SJ#1<Rt%=H#%"04Oi3kLk);(V)!QbXGP8h-D!@aX3Il%6KZg=iCcHrA+"lb;(`F&&48>lSNN)oWMCj0?jh5e2!T(Vh]enIjZK$2'LipK?R?1,%pTX5mQb`REj.Yc+)m,L-O6M_4jQXr`ojI.%lo"PXGme/,#.tJ=E,C2e>e"A379N$pA=$/;E/oP?j!2^KENP=F7Z6Lt)*'Sp&4W8[Vg0,B',G9#&)d@7%_n3AC2s]!5]R>u^>k`L%$_R\4*IpYA$'VtT@$/(kq,BOo/C*B[AH&eJ6T_2%8KoU&E<J=nAX\c2Zs?'DW5V`i=XC&`@bD"330o/kK24U?ff:8$JPF*8,dV:s%a-+'S_k7lt(o3T8>g`VOC?X+Hq0,Mcd%Q3t1CihEJr5rQGG0e?7.e<%!A`DaZiiRs(sq\1@HTFQGo2AQ[P$g3S.[,tSsG"+N!$jm%_UJUUZ9CU@@O;2m87\KTbS5tdBld&,kN"EV&/D_]*;EbGi+nS3$C](lY_7f7GWBr')%GdL`'5EY&2Xh)0ksrE#D4s#0;-NX0A&Mo%nnlJ++Krctfmq-2oC3s5q$_ufa+6]?[u(rb/T/WN$'HOOb;tYDa5@6.Vu8=QOX2JPP/^H^@q6],L"Z])dZ,Kf$N"q-h1o)dCrQNR%U'Gt^8d'=&&&2>l5MDB6$*5+<V\*1LK,@,HO38O$@KMaL<$A$>Z[]E92PgAGq]V?b5P^*^>EV6M**d!ZQ)KItadH7mRp^MY_,aEl%(hL"E0o8cdYS1Icj=`3Ipabi&eT_iOc\+77V;PHC!<)!CCmMF?iKNg7H]`c.A]$42".dMAj2D"B9.1(3,dSQ.S0]jOkJ0#5*<]bh%<$V0W+TkJ98niu2l#ombccQao%,j`VeH?.SU;c<\!,=5n]9<HY=CGT/Llc7^j\@@>Eu;kaR/d8XUko>%0;T/=dNiWQB?'p"b^&[\%muimu0L;[,bU@YjR8cEUMW8FYV)Hc]F6L_8%`70/;BXu;5qF/.k+er-1NY7TDDorRJQbW/:A>eIf(8PoT-Nnl\`0PNbQUsCJC3%F%V1T<og7$D0V.&AOSn<FMB2M>tYsSri9ISD!#:"a8/)q$tG+`ltKfIj\Tt#WRN>,>KMK]%oE0.-P"#DB&Q3#Q:]#;WjY0L2/I)t\:%TH4bGYD\i7DUP>RO3q>R>^(dM"X7Vj$]tH6fe<J5<'b(#9Qj72)J6-j$O_$co"u0OMro,k^</g#(1s)]So\:qJqDB>_TI`B=49N3%aqEC-i;\&#q8%"lYWtk_k+E>AC:KR3Lr9pX"k;/6Cl^UXMgMOZ+t9f&=HgZkJVgH](NK5aKE=7M>_)STDAKN^KLUQ(+K7uZAfChq%-#&6eO`)aWA-2:R`@MlDRa`>3PrPtaFp["hbRIW?oeoJ]SC3$;a<V[C$PHR5&9?\`O-.p`RmMM2#@H%N_M#gq:`Ee51<;&nP[jh5%k'T.!UCF3eZ(X17]nmh>DCOcMn3:s<JLr2o#sOi6R@4="W#O>',9;IIclXS^+YNNm_p`G)ms#gL+F=nGPQB7g6B$l@ANFp(83doY%!>Q,D%IP\(`.<=:GoM8S/)3VHZ,Mf[WT,.VjG5,)+`NMYjGDNd_C$DmWn=KL#V>!AOo\IT4:_K6^K>FF$m^C\;dHg79r'1!/O--e%4jfW=mfi;)+pgkl9:7DK*'&p-\6ch(#K=qpM<f.r_#rGu8jn@U!^tPt74j(G&id7kk(6B_)S?-4o@Z<]#Jo-Bj'"FIk7s?"@%>Iq%6UXTL=e77:'2JU?!Hu8`(&.gD/)smr93$^\8q*,\Cffq#PAMgbYrFh\(br-cE+G\t8T7)W"MGoXI.9W,L+B%H'6hF%g%k33APMPI%62#=,B1)&7"Gmo7e_XZk7jMNKEGr2*)K7>^W;nmu/tMSn0I?cXI4:]h9pf`6P:agYSQ\.p#DNteO4T:RE66)gM[.40a;,%9&XEmH%'l:FH`XQ?\HMO's7Z6MHT.l@+)UG5_1aEbThNlJW,CEnm&uijXF<@>)C]e=jetdgq*#`W@E^>\`79jt'K#L[lZCJ_[bJE[;Meu'>%_e4J?KIu:XMda,A**L\CFnN,NAU055@O&gjV2sSM&9pLJT"(V)Hd/&@p'[OXkK>iS/U+Rpk#040HoqRLD[BBZ='?;b*#GgZA0m54%r,^gdasaJ&WU$i$nucr$Ea9\DE'TU@pu+#kB?%UCUM>YELO'^r,Ffn6P44),)plIYJ^"su"lTZt70c*AO2FoNlnU;!*>WP"!=Ln$%k'7&h1>EJ%\g#u3NH9+"QR?>>jCFo/%72G.Nu,T.iAU8b!Wa>]jff]V00uQM>@T&knYM.!6sQFBlZEJZ!RQN9_e6tT<8Z:ZCmf='%Z@jY\c;Z";>i^@\@^1R/WX-fC-oWq.#ic*BAMlJ<LaJSnc@d&*(duLqMk*4K%7fD7Y+^80"cksm69%2g5MHtll?Il)LGj4*c"0>P%*bV8/M\!^^?(Vk0)]dS_1MMdt;_%dNScm8"eB&$1.#C>8r=&5[UEGBQ8\Xu=X%[,C^sPAAF%QEtnep3j*do+SmO'&1($H8L-1JO*%A1/p+0L6*fnFRbLX:R:sJInHscD6N%_m_ap04=8\DF=kXi.C'@90[jUX1H7^h[`2E`C5ol,i@ZBL<L]@]#BbmUe?Tn%AJ*%D4>i7%*T\H!d\0(HP'n7=Zf6Du8-'EZ/c2nXBM01.>#5jQ%A!c^V+^C+(?d`SC$FXqSEiLm>2T]eRBDRs"h)pVi5h337-qfXB56K5"nrA"%V&'S4j^U%`qRA\"VQs:^IYF53LBpJfCNc*Baj*Al-oF#!j<huc,iU-d:^0PQ#q:bfEK^5,%["p\d0`R'fKVlLHr?rdk/]::3'LT;%PX=W;a'I=\"dTi0J3?:I"(7H\U0M;5DQj[N,OLBb@C3gni@8hF=1G]tEgqc9^[cVjR#'fcD[rWh6q;bATrdC=c,thM%*:T*`TIN)%O(9-ZpQ,PeDY'Rk/09R[[_kfD,e&A/i#5-.(LDpYdGdI@_EVZD7j126JDbEeL*2j]/.Nh'!][h<bnRf5>7$6JjFG3g?=Fs@f7kB&%PAp1B3Vt(I#WN0[((aFb"6)j7@><:-@r[tG<C[B-Pm*2T5gbZn8GK'11G3Nq,tDEqBL@WeW=Z^!D4pq4Aec8%VU&eIUk2[!eR0UM%KXci='P\n5.hN41\Prj!,4LR-dq8-D&2%Sc0GsD?\,bJ2Kod)XDK&i";HT>JJHhd?GTRk`M9c0I@*XHTTFc6sp(cq'QR;#uT?#V5%fL;8SE@JlH^Q!63!r"e]V@d4*\1'`G5m,Se84"8X%*0"ZNl)MB/6mq+jmk=AbIR,GD26kN"<kmpPkZ9=OY*Ju^^\rS$MPEsJ<*4'%[c(W[aBc[i__qs'4b,sATl1<-ek2?.qhN'ThdJBI0B1q312/!b0fN/^J1eqXoD'N+=K75n[HGP[!f[=]#"YC=dmlt#+OI+sST;Y.%+6Kc170>7`kr%NA't6.6D$lsiGlMcR;k%RW9K`MtRlac_cN4NEa@E7\UE;D'prFHeKa#iC[Krc2kq>@5@R41&_,=)LNrp,caB<J>%f*7S')Ws!`2cX[IN`aNaWY6'o=qh<GLmHukfK9Z9mg8rSndhZ8a&Xl(fi\pp2L*[4ogl-.Cl)X4Y03Vl.g!LVJ1QrH8hX_/d)&(c%ZuG@Rj60!4C]cO!GJ^`n?O-ae$0]66:e6uur$\fAiJE]p+?BWG6S-sLEWjrUN>7aS$J4;pX^Ed-[$[H;(!sGu=MUD`Oasun42-HG%;1PAT2#%(h`b80KTYaD(`&c:t(_%At:kH);8NT6f=>kek2'53f)]NZ%80[fU@5];XfG\a%0c;3b!iCNNA=;G.^;)nfQ2lMe-!7&S%p'U/1TZMhDB9L5F28ok,+I>I:*4t5hKH$]r15oESK8<PHH5mQFdNT;b5l/ClR;0i_;6lc@]ua"V\3Zfff/=b%fZlo)HXergMaHWo%>>Q?$!dDNsEqWq+fdKk``%@DlX:C^;d1fdTT^'m5j4I24i)MV$\?mO"jWQX=\]M8pC;LE/m)X\t"a#*1f74mfjCfT0jQ#A5E+(iB%SD->H/iLmE/qnmsP<fi&ohU+dO:VoUCt.SscB`ae"lW8=UW-0q@9ckd;T=ts-7igV(:9oBTR7:R7G80jFA5MjYuJ%M4ZQD-:sgW4%K:.O#-4j>j?3lPr+%#V7NV'O$`V&GIEdiupcZ2J"nmNR/Otd71\F4C+UC:!:VW/'@%$X2"$g^W[7rBNf7NkaB$ol;H_*-Sl@UeDF%H(p6[8(3sh3Mr,-J]G^T\$.F?-0!`o0MVA6(`a/B&5Qa<GS"2YLiO<.267p+2GG_7K3]d\#d<$&5T:)[@OHDnb\4*@OK!AQRZ;th%FN.1T5+@/e_hYUm"HcMMVG+NaLmpDqctBWCF=g?PLn4gpoZ5=aEQJWEnZXm$GN^fd!!J0ho#3WQ4:Bh_V/0ftXVF.-M@7-!/\\CP%ZP7LdiGYmS[R;(GaH3(6$!8,k0`ua8?ic/jQ"AZ+E90Y?*#A544\_He7uK]A*a:J[h4mCI=X\$`nl6iSP^%-dRGqD`6Jj5*,T,'F%5thkBNnb$Ia)Lj5iaR?RE6.C]W`<:l%Y`p69l$(+mRa+a6:/c/p7OAb&3@5OV@ku36BMe7a[4c$(6rOb!Uhg05+81?)#'R'F/cb:%Ub4n9i-IN,5ClarWDB3H\KrYI,9B=/L@=I1;[BXqLp'*Xj+$S@\ttr)8TK`#"DV)(`u%)]KG*Wq[Oi'R@D1m"&/0_MPU%_Md:.nS%JG]ZUGQoD4_aPkUju/JN%&"5j"Huukp)a@8\cV@83uODVllNH*;8^_\Tr<KEg(:U;kId_;D1'qA/HJLp!&b02\8]$1ebOs#B_)Og%eJS30Yn05kRNDhI"(hhg^VP`1E0h6d7-YA$S(!Z3FU0'n6Ps:2_JLp[D]gQBItU->I3+$3%h>pJ,,B&BU7dM--++o^MZuhZie?",%dN3W1!Ek_*B$^Q#Dus)NpI-4QI)Rk(Q%L<]hddI:8Dt*!=U9mU0/)gkQP8RhLh98G5aHI"c\mP2N'SXk>X@KfgsB\;Y]2(upqD\C%%5G,8[_Dlu$GM7ZHZ@J@EA!`C$a[n#%&l?R1<553\BQe>(K[LAbT3BG(RIL#rI@TuO3<]rMlX3\CAKJc^^@f_^r)$dYq0I3]JI8B%,30XbTnO9D(]k<T2,S%\9h1<;iV0%jAW[<^\XKMm_SS`.)-F4h"Tm9G,C*7@6VY9kQ%GK4OZ!@;RD%6X7MNlu6r5iIq`K[J>B2&p%m_:94Yh<JWg7h>:pt7EdL!g]R_<VoM?:54+&\nV_'t@_5()!A`$NZIi@g"Xuh%4[o,O-"8@@;l,-8,+Mb^mpHE4k'3kR2r/hD8UX%b\,#F<k-C4264?\Tq_-OMp:SsS'?'Y,31Ae>3:..+`(_JlJg<5,S&&>>Lc'lpO\F,G1^Ob-2`T8f9QX&q0G'^>6RJk#QB8k9t%%O%JFWaZ7TP##\p1gD"j!K"O+4>GEG(]M(Et4<r,<gf.jDuQ"U&'9`SAYQ!,*lo7'aXi9RiC7,ub9rL^aU*ECG6nGY\GO,^h3ETuBT#%DI_,uF!@cIM:`O*+(-?lDr9*ZQZ(X<6NQ;WZoM=bq4:p;%np^%4ktj,`.5%2W(;c4!.)H,"Gg2l3'%U[\?<3kE-KsD1*QtGj(lC<%FMM8R[9ViD,a1?1$-3aAfSCif-pllnKIjj<bi=*,bHO*3cc7VOBe]`pY1F\,>/CF?"p27nL6aKa*p36h7^D&D_`03$,NDo0ELACU%J<jUOr[i<+J2c[-N&0Rp(=lBdVjS(',co^ID'+!pCGH.(mT6=YdTXX/Su*YVQaEG6n?Gifa!R9+Vh=<rb&Webb@)AK$SXS6#WT>S%E/-m`@W,G\R^d?n(/m/j5RB&i0n*W4%:EglJM;`b>N%Im.:Z=26kSk;Rb3?&/GuY%m0AI9/^u$W<Iq=o:<+$e@WETI90Y:2R>)_q%S@T\E#rj[!C##XPo=$1&MdL>Z(+4phZT/q`2C-n!T7J0(A?s[0iHTiI[0=-dN6d."1_j_'8o#3lnh<UN6g2i%9KB3!rZ0V28dM!0%eTWkE#6HkP,!)s<$uNWQJT*Z:>)Ek"4O_[hZo+@Z/J\dR!O842EPL\;#R-ebQh*a1SfMA>i%*JGn+!PZ[jBOR=!W5MRc%]AX::<t%'lN'%$3u*k=q/"Sb7H2L7,e^lBtj$B5?RK0&*guE3T5c:i)2PK`ZQ%`%pp+VGR-8J@b`/Qan;#@.:dp\'Z/TR<$*m@iN<!k]S>R*%SR\+u=G%_r?t_L7Fe_IOI,>`uR]M[&Ws]@u1,/N)1ZF?eHjK&m*.-bWfLGOAO.nn&@to^@]PL=I@j[Bq.B(.kU;tX%_=D[l_:Hq<%Dup76/R:B;:mf?2&RW<0KhON1WJ:fiUk2G`$ZV)2Nlt3FflHbR@qVMi\3/(.-,KjP^c)6Q=Qt,EK0r)7c(Q5G4W15g7d7<*5prWX%E+'M!@V!C?6R>T[12Sod/:"s\97;0o]Gpcb!%t`?9#@4u%M^=r;"n_";U^nt3a@nL,*Ih^#i@C'BT9H;,L+0Ioe8QpC_bR;PuRUi%e7RDS7LWffgf(F&8BSn6*l>*sD";^jV2'&E]Af_I:c67t1+5MMkb6E0]>R,<A<JK>*].p5@5*P#3QdZ:ERN<jjQ;@=GU<b_Z+2QP%;;aKU,uCmk82;C4"N%P!L;`p:WJ*lDTQ<b&!5aEQ_jq^u4t'6L3Ar:pAK;h)3Uga%2cOe4)3^PmN]B+),2tqT"d2YYr",=?f?ZG"%6kh9B8E%.R+j!3GD^jTS"t/%K7jD)/`/9@S0Fjr4:d3]AVVF!p$aICg(GuWR=ib"TE]_.CUiqC>O'MU6nod.cJcHo28OBG)q[*'C%c?r:$]>pL*T#KZX7X4AO!-jY!JXk`c2Rl']#dDC9.l`\H2VGb9\KmCmf-/\b%sO_d0YeSB=1rS[H?=QA\KRHC*q6ZR.g-O$=1V-?%Qb[n0Skq6N^"C%T=<&e>_;i>4JK$:JOT^Gs!JN%(N]]fJ5iYM,Mi8Xj4N>2NZu@l5GT):PR%&4+`W9k+jP%h.+"5$,*s`r%aqPR&%1sYhhM)5Ef'ZDJ*b;U_mC2b>jJn<q5lI8_?hIi(JZfIB8;us:1B]?!X?Y\E<Fn-g.B)5C_k=@Xo\P"Or+;U!Q1N$*Z]#'BkO#_#k%\@QX3;nf1KQH0`+#dFia:\!rY/G;On9'bNV/aQ]8@L$U(?WTQC4@84''C$JJjCPY%:[N.m&)K8(*/[)R=?gGK#TuG`$H_=!ef')B%`Ef"'Y5t;D%I;d>L)mRb.!8I9F52qj#o4R`@[K.GihF=K1GC0[)uRF6UBJ>ZO,kB-1:ZfR29LZdnAIn7".PPG5ne\L:IVPkoL6]2%g>!!c$@p1tj^=,RVrKfK.Bs4<\/NMTLQbQob7b'Uh'[uQK1K,_;Bq&eNRB#gjdU#imLL5ADZaT)f(5[u!EX'4jOW5oAL+?q)+q9*%&QhB!^8WbM"V0^c/U?YPO+UU@bqV-PJr-0HnSdr_7"_hmP219R`>qK+G.Pm_;VQR<Lnbq*DCTY*5B[MCM>J$ZIZb&pD_qsfi:;A0%HrOSno)>Y%ElE\J?)cup-3@Z3jtu0(KOXqgjf1-)OuNr<m/YO"8tLLk[f_0ugJ`-6`8srYbRkfgM%L>D4K02QjFo59iS/UY%;dA&%?*=2<E$h0HhdiGs,$C+RA=/l(k?A"(4;aS*QO@128gT!;(%A=WPU0EU<,?ha&8`JX[9QnpHFtbuJYb7hW!].-$B$;&R)X(k6:ml6%O-HKrSrn+IOuk@D9Qkcj]F"_kYCN0ZE18(U=?m@[MQ^JNqDJX-o'tXl>e#NVBAqi,;B_(>2a(DNblYZ>\he51^c&PC<)>@s0<gmr%L+Fie^'TDl$VKn&.X."s^k!O"A8tmVdc1>*a%8)<FLYE2b2#JHd,esW==^lf$(K(,ML(O>A7_d>NTT#bJjo#m4)c>TT!C)IGXdRM%+<W<UgV`G,r2):]?\IAL"'6sn_L^Io$AA'gkj(VhQWTpWgu?LLnC\6#D38$LlkX_)iQ`jpDmju^DJQ`#'"\=b3c.KlMW+u%Ab'ji%,k^5mS&575cfS<*J09;.<[sIFiNLO0:s.+NV9Y]n0/WU-J/$QD4>)4qk]e"TCj5G2I!6&PS>l_;4kU13K=j-I8;s"))c7mb%Zn50%%XNM$:])KTW%PW%3O-bo]/VCaa_OOqEBQ8DO\JpFpXkM*qZoK]9dsF]pMC*kf6>@'/jEknQ'E7RG-mdF9lXc]KC?:c?Ir;d&<u;m%"MNHQ:i-*PEh;@X4f$io`gIi\D[+gD3%1u+`Kk^@9b(J+RVGYR!lFLf2MmhQ^-%I<P:o!?2KP;ZE1PVp?\p4aa2rm,WOcZ`npDTt%hpVW<.Z1neA-X\0DTC8FXaELO_@[RO,+$FP@5\VB`XejG0-"`Cr<p0MGFhjNelN;Jae_+,dgk>p.B_-S5U,(>!@Xe3%0BGLrA/n4%YgZM.EGT923uLm=?tZ3/MdB/raOa0>i81"ppbB3XQU*\PlLrVPmS;2WYeC:k]G;FiTPh\*/+GMCioP'ZcYgM<))\s-k?>Ub[`CIn%0!jb`P+&o54M!g3-DNV=MP'M.b_%iB]q32bM[#VdWREA@&j=Y<ZX)Z.a1mu?.!9UW8cM$\3'5P13<Di0L^80W&32TiPQ!jIDURp+%>9%NSqKEjh_S=P6aaV1c>sF.eIL4TG.>n;GSeDq=SV)#Ps7rGg#1:bZBhM(\!fI^WB[bMN&<hJh(!ksq6Ab16fNdL=-GhR)1,ZF$%Fqd4K/GhGPD@7b0Eh#E-GV[RQp]2JDR>rRMV3&OPX3J.4N>B^ek,H04,h&"I4ka^X?DP2$C;iPIC!d:12,n+enH6f]$Mj2W,E=:[%fn$"5;@#\1.V66GoTa0&Nbrc4c4l`*(4Li_i+Lb4=rVk>O:=b.CO!k@&X1Z)fIJGDI&3H.FbT<)V+CqiDd/,[NuqL.]K?e<^?t5J%bI5tX>QQRSB3;V/dWRHqRU"b.EQD3Gl.Ud[IjDfABXbD/Fms?P-/OAh4.+:NSVTK"j9lnXSN;a6oRjIL^UUW'[G8j/o+U1Hj@$li%(lU\"BFA[m5QT\SGZ#bROG0t@heGMiaJcRdIbtL(F)G<l8m/9:c1:;`$'N."fs1;*CJfu^Eg7s5mi$LSf'V$9M+o'PcM;3h/^Mbt%4X\t^8C'r[6U+cMo$r2<$0PnIY[3XbVi?mU/PgCl)s\9t(SHQ^C!!CY@/%0E$]3V26P%@]&V%2ga>]\">q[FZjn!B5P.Ri/HF`>2%/rtbD^YNg4C@\d+qp[3P<31U!H2Bu=bg".RH#+kpc:Wj_(O&EK>\25*ET.;'")!q8OOQpe&D\g:"9],J_-8PV.MZckYQlF79,Idm%<4J'hP)p*:#RgarRl[t\kJ^\1:Y%Mh_mPQ#>6sQrW\n81_@!5k3X09[>Z)nH/r[a`&HRL,O!JE)ISR]\m\,<W/7BK_-C7Lu^&CJ)%5,Ah?*h?bCYPGN@[iq:NJ9R@Ll_$II+s=$bXCJ#2\,hC'WcUK+VIan:P"U?->Zb+e.PZV"Ta.Yo4T^KR-UWTQ.;B8[$LXsi8Q$\9%<NP/iSt<iQ>>(mj*k`S')Eo;k5hN_&ohYRAmMhDP1HT.?\JAkS!]G$O"_@[jc8eg-0[CmG?L=dT$^LIj&HJi*J7N9TiM]A)V9:Sn%4gT%Q>XN9nI(HhC2gF+(L#=nKP\[[nKcT.b.Qr<9&H8/P#R888f/dg6hkEROW%p)ud,X^i-a5<rp:D4d&3F/Z/91d'Gt[g1E9q#H%Q`?$:5VAKK.HQ0s^XnOD#YaJ.."$f>fMSV-#N,E;HGd1e<@V4WEI+CLQoZr.G`]Kt,A_)WBB9p&.&KZB5LJZtDD>![KUMq\5MRWm%OSh)A=J_<q)YTc*X,:IJ;6.>S($J/Q-@^Z1$Up/0fGoTj2=qG[he'?E6WhA3KPhmOR8OiLgb)J'H%]-ab/rs2b,)LY_Ad*)%OEL^%!Gn/:gn(9VR0f"m.&4or&76Ot<0r6A7H6b+#3qID^(E)>b"!kPV"0:A2T@]BC6YE:-c/bP3NU+NFV\rPFGlGPIbFJb]/R9^XMhV4%('FMokIm5?\^5:<A"p]Z*`7UE>S\)L-q%<3Ek%G)$=f,f"R71saZ(Crp]"?l!$qE08:6S^f,_m3S)smS&!2^[3qRqbG:F&`W`JW-%Y]_.ME%Nn9qG+e=-d*p*\]X`?]]mfP`:<@GD`C?]lWXlG(5H:XRJsrrp`q*I"kSV'=p2qWq"kNj)URWZO*.2J_Zuq)*@K\E5:DY'%J5K]H%sk6J&@t["4=N4HefZ--91+83+AG0fJ71_l>q_,dSXL6HQ.K[TQs]e'JNGi)8gE9AqZ[uGoLL95O/aS[PZIk/_p9thcr.?$%D'$#p,)N[`bMB\f+9fRsII.\5iPTOiC[b*C4D$Y3&o8>?.2#)I%@VpK\tA^ML^BMXli*Ui9,LKr=.a1./&6'Mh0eUAkcF9ZSH/)/%Y`"')[NO9DipI`BZR4'nRYh/b=_3[EO:_@U(9BeKbR+V\PhN92)Kj4CdCVEl7TF'12?rG+a?_n=gpf>AGK)+DmogRb'ZRp%>2@7\%9p":2e;*8a.I>(8c5$ko66_K7%\s>'G=.%us-.qJh"81X:V?EcIent%.p&Xi0O-4`!k7'>f^'SW?iO!+<Ts8jQ\X&eU;f'k+In+e%d>c\1Vn6mhJCR<GU:?JRZnJ\X_O'P@Rc4BBi$)tc"ZM6H+'cDg2u5sBgpO.eoD#e,%:J]%(5K`G?6^&Vj]pLb__hnBNm5Dt^^=c-%/0NK]8"h_Bb;JiPOeD.tFJ_6V/];Ccm;U'C64Sr_-^KR8[tPdsHB_]MA^^r'Pq!309#q0g\qLQc;o<aZc>Cb/k.E?i'VE><TdXWg%i7QWII<<8Co`9)hqspCHk>FM((a8pDrpE95WlE,+IZ-(;[c[`$4:2Mie1JS1QFdG:i;:]:m3bUq[jQ\G3O4IM\5m(U/b9VeSEtTQ%T6AKM&)-<^g,s#X\b(!)bjXApDbUb+1B6i9^PGV\MB;\q_ol+WEF`,$;qIOJ3,Wt1.CoWe?J;8k8?iA!KB[I_IT8%8=<J<eItC3/%rqLT\D^;a)][>VFL(>G\h%se0T>&9d`jAZlNWIuG%/TM.aB1*bJBd$MgG@Y\FDZbHj#-jmEN<(qeqtLYb>B'-ok%'if?>f:>KVB(%!pCf:<YHZAE\6DCkii+!CV9a4'Kf-^a7*4=]aB_;>cFU$A)JDim]dU%g-:)NL;3+\kCL(L9Fg&ODjiH"E7bE!Z+9cgR:]2oo3Qf;%P5krY2S_hO9$PKDf^`H#ok,>bNc\qVAqr*<UZAEZe7!T"b#ftrUD$6Ra3SUKT)PH2<YPI?!(C$#KR8,lU]6rbrGNCn:jd@DW=6&X%gS\Y6GSR_e"GiBWg4OIdq+Wo*K790%>]mL%)42u'4[%MNYsaC@(L=u%H*2kO1c%.*l#CYr/=K(&ZE'_O"YNg2nX6M\>#3R==T$R>%+s]E_\Iqr"E)lZoXonEdXa*-%P9GcP/R;F:'on&$U`A_/J1WL_6d.G8r*i>?(^^J2ms<D^&Zl^$.L^BB11A%0NJZ]CSpsZC70?RF%C++(^MD2ORdP]f/Z!89&ksScu!HnmhT$9fK_!B)I]KoIVYfjMco>Z'b+oIj`GJk?^f=Ig*A>c[0dBQMR;YKc?JFE')q_V/6nbLRe%m#RKgJg6W)o[Xc3Mtko24ujuVn70.g=e)QW?2;%KWo=UVaFGU+*d1F#&2PDo)q89)J,dVMFO8PbW&]C(%"j]N+fg-#`Vok)LPH9J%`M9U4I\I3X%7KlFQhQ.BD=T\&QlIM2X=1%Lj>>7I9cR^Zef6#]`?(C`'I@:gA$]LiCH2qi$jq3)]QolP;S.72fMYjTX+?Hh(DDk_%f5s7H?V7al3>A4%POfl9E^5qPr.Xc&HnnF2q5-I/6ju;74U,q7Y?/M*`W>s9,;[SL>mC+Tl"Pedbom..3f)d>PM1aWJ>?:JWjli(%8%%eC#dDnS=JQ!'+#I/Qj=HduotF=<B2,#q.V`k`L(W6o>>b;j\Fhfj*>[ZL8JXN<4<it/QLH:="s##>D(2(\Ra\^N7(GqJ=OdC]%,sK'IfO^A5p^RF]Je5DU\Qo"@49_F,QI24!;TMU/l\Z.>"8>a;frC+0Ib^<Y&>^*`J7T.HQURb3McE*4?sjN2:*OS[JJj1QI'SJV%-em_,45q[[!N7/nNQ2=CF[)P9Z9_1kbR:\:8sqC"fP4\1m1;Y(bu>ti]g;EZ%WMRnXQ/)n$$2""KEFPl>q;&@kM\f;2BfG02==oe%.[U)2Z/SgcCm(Kqoq?1VD#5okJu4m-44^)]JcJe[krdDDT1>'3Ka]<p_g"2q]hQ)4j5pC'_hATX\tA7V2,)d*IgH[E9Gl1m.HL<<%Oh#m]PjD8E1e&ed%[&#*RP6[Tj/,k15R;%7k!Fi'32!pAb=1_`)L7nG'''ZL(d,;oD?@E+NekH6lRZHuRbcju4aGm"K2,rBK+Zl@%[t%'$$I)9Hl,N!BNdqmXTRTn_Z1T%?QADJV/u0_C)3Jc]e[*>&T?;c0O_[9$Y#78aa;_(Yfu#ZuH4Te/&Z[%T2O2Msf!ic<O5Zls%S-@4YoVRAl$MagoM5n?K#K\c+O+OE)6<!)L?YIGncl^P;X8`4W&t>:c5)X5H`V&N&$-BZLgHE'emo^@TFr,[bDVSY1hnOAEGDo>>%!E`M`Nq20,?EK=:QPI/gAmp5aK7[EO=Wp2up(r#b*M.Q=KnenNpi2[H$094o"J`l!rE"m$&M.NMbR*l`?bNN2V*kW,%5`E?bQt)g%K%2tFCi3IWE))%b_qd]^+JF]6<+3sPSBsUs\]W76=&M:PCqVi\5W;>,f[!N-aH?]D'A$K^hkiHBhQT.uA%5`;p"7$sBN0fHD0lXu%]YUQ;HX7hVgBos*WIU'k<9r'-cTchUb'=+N>WH+^\oD>'+k;0\LsH:*TB)$qck&HA"6B\nifjhH>$S#BWf"Aa<]^/65iR3Ghi'((%_*oDq_sN+?F;,%e.nh\RY@+/(5?S>RgEV>\<(sb^;(KjhbO%UiG]kqaAQ!j<0-:h)Ccu$ghr@T:fW!$6.]OH=#L[(W3[E,?q1RL?%g'R9D\Om=t$MGZPXXt9VeZkLFgiBpAU]X2ANla\0AV!iepV&a3r$C,D-P-XpMcc?4mH!N2O9,G=B:I&U9umQHIonkiZb4$Jo`b@n%n^K\d*YpH,hR>7*Gc5egK$%NgGagjT+r233)QF3h:CC"]VGMA,r^F(RS/$Ok!B`^[M=<eJ)B-EYnbL)_r`K<cl`<P5$5sCS4b4)B%1'7*efbVp<ih:F[s)g!tG^YpjmUJj$Bb[F1VX1@jBN$k5>"EkAK6`/m%l5mJ?S:hB3EE;&Bu87u+CdH5GbaEC(H'.0Mu?6aKekIQ%N5_"/,FEp"Hb--sVXt'M6<d-C9+[[C.2OMQ6nPUI7$ZQV=Ab:37,qbqQ=tWkj,]XbOW4c\8q$Y'nf-lEW:<u8E;<4q>9A1YqlcdB%AsosiD((SCL7uf=_]r(UBL^t[#l*qqa'3S!.a8^+L"B#hM4WQ;U]B,:Lt@E5S$3A>HgBaC_6\mIgVE*s8!,G:_be0XLeM);A6b-'%8]qL+R/kZ1ikqr?+<p3/9g=Ti)9eK2,3q6\iUA9p=\gQ)J@'9-A$Xa?GLT2D7U3&K]'bF+q%3J/J1BTp[H?kIWAl5%99HP)]-j.h%O5`OY`sBn6?GK%Fm4U'((tp3>oIruL3KH(Y0V:PtZ4,T%4ii&rbG1qs043lm@"bS1If5uH@V]/"=T^F.doQf\L7'NPSn%3a^,slb%S0iA_35;%o4lHgWMW#+>;=I3'Y]l`McudMB6%$1.]D,N&Xe[;NPFfcQ'<!SG6npjZp/Ti"]"soPWC%'A3UET4EY/Qhk5"LAhu:Ys%:-$M"ZNm'\=!*,Q`rd)ijIJ%[s/(lI%!IG"-2,n#h02pc.[Hu=g/4Z'=u<d?1-FgLk,-a2(D&MrDXZ"@:pVO?_JQb"d\)a1Yt%A5%*T-H>><"s:V^-R]2!$RtiWRL%=F?F:XA#R42CZ5ZhU8sX:f#EioS_gj+i-:OAo,M6R.9u>^O>4t8Irp2EX3=d?GAG,cbI@QVrc"p%>eBqq&l,1*->DELUQpG5'nA<;CmaWBB+3p_pJj9>G!*Ps!X_B;/OQ$:p4>`c7o5c!\_lsLk7M?4!n_lSYT!Ek';u"GBM^en6Yk8b%EhclJEKqVo<DN#@4Dq!KYU"M,S9j6N2-?Y6"75,]G.aD<5gR"'j0mjun8LPAYe4CXB-o>:%NdmM^V9uBS6oerVPN,+R48GA*c_i8%eT'dHkL8@Y\$kM&mV>cVGdd-O(nhOi2-mAtg&'<W*68$>:<S_/.kau:4DW[GnpPs[(uX9u]WQDs_;!FY:7=n6OV0321U>uP^4(L5%oGTb6"0`MRi"=?bM4Aqg%,F`_nJF.P%'W8N/Ou!QQG'2&=8(opaEq=f^d6Z32>qK6D_>)_Rm3MiV4lLt@,DV7JCp$)[k$mU$[([3%Jj>s[LDFKApi]gMmCi$OK+i"L&^l2OR)<]/0PIOc;uQT1..;]:=a*!7A8DP7n?_.ojl4cK!\u6R;0]JKC;`_JAibe;&U:D>@i(UT%/8SF!)$p&,Vdom![Dc?3Fp16/QCAG^CpgAFe\!=\p3K,9q(t]n/tt%L`jYmD:P?H/+_4YE15<`]URG-c1:?H76Ku0<'Pn5'9!cBQ%gtJOT2[/k_r&'S<%R/'.J!K5r(5BV\[Ua&g/,hSCbCE+Qg[+^mc$J[(n(EIdH^hmW^BWJEc[c,eMcB-3L?MFu>$9Z>pD$@:,g`eE%5U7@^YI'[5L3PSlOi#5u>:F#3=_WIJoaIO1L"l]r;/9UY4c-Y-LY/-h[lnBo`D1ZRBGS;^feUD%>i2O&%\4PENei0@\n"!:X)#Si%6BAc&E.uBZnb>Nr^o9<;:!h%NS=7FddLq2Cen>Jb=2R(8VSC[#QO,F=n.j0_qk?$;Gj(h#_Y/1WnZ_U=269_!o`O092SlY@m9grB%n6CV5,UuA[^=Bj$.NUY.n2iU?[pX0q3C66UGp4<G[P+Z=6!9ZA3U77).>?;FlJ\9K71qOg]34*K2rQ#5&%PSB03l9JjI_^M2K=b^%a3DV21Ndk]3;6RaTFc%eQHA/:WjaY0R1YrpmDhr'ZpVEWkg"/]g[1etmPH)Y3;pAdc<R4KT2u",,:c2b]7uGb0T$U^3,[HYN>sU=%cG#*)2Cd#i?,L[hPS0-j2U`DpF_\&!JlGr,Z@NN3\%F:P4(Wk#EU]-?/#OrMqM?%,*1Rk)/H5M,LnIYb6B$tIe+K1o6fr$G5oNn6%<d-nE(6%r"=u!8g@7O>iE7Q;Nq%8cD*.T`aD%4h1Bh2VIX0fs6%Y8XOC[AlFGG0JOhn<7)CR$ghR/s2!c8CBNNfYGNor$rZgoO*O%@8+`N<OBsdmX,.Le(LmL[#-sh!AK,"VI]4j)>s#3H,WBjLch^heDda9oa;YC\U(*<ba;RSVeuXF19!<A#/buEL:EXql7L^=9pn;F%AoD\#e99n$7>?^p&>60/Q!M'i1Z1-,.6MSn`f.hK4+1,;A%Igo>0i7F#59^Z^^,XZ;R,-l!qJpUQi9OugI5&jk0ctSCnYcZ_4<*0%/JU85C9]=M?E1&_A'GQVmrD9,"!ggfoGPsj6X.[BZ`G5Lq.@C.`3X''e1aAU1%TC\.R].(\JiG4A\V-LPt_Q"c:.>?n<R._IRm':%ZG"0t,9[XrHND;&DlD1,SjcM3d""jtVp`d4SOW4a)=-'Uk!%cI=ZUOJgto"j#F3#*dtA\DX)Wge"PGma#\!$[Sj/s$I,"4e,BZu0%B^6/UkT_41fUiabn2R3SH8[!/Rqt@=,15=diVfGNh&$QkFK;CBn7\P1M>QDV/eR'!P3WguE^Zc?So?g-1#r)[E.(Ie'2$2m2bp#\%^$\N8psmF_)f"h5p.`TcSoqPkhR'[?6:^S=m+KqC_K&-(kU4&p@Q=g:kbNOXKQj,4^`OkV^CB81I/BgU!p_AqU2M6L-od?+*=t78%+t.B<`@9q#.GFL"E_:6^:X^$&a&gA[\6l:=iUs[+Y]K(=Jd%idY4naWHrDcPd`0Ig+@QL!"p#U*i@K'HqO2fp,F)%Z[(KnPl\1@?%bKki%L0Xa,6.&IK%&!/`c_kR,:qun-8?a*kL;:*][L(Q2qgG`YV[ePr/F=S\5cU&tW%r4\32AFFV]*/k#]6C3Nh-Pr&tcB'&rMQK%Hde<;IkCnT54r@iF>V$a8h20g:*=lKgKOPH>/*Lmia#(:_d%X)r31R%QEo<Eg:;EB8Zs]cc9I%<LEuBH!$)rp%,l@?h.&OqCkk>,%6Wa7%HcXRsWJl!]Ysp$K//en2)U=*ZJ`U4*6L_'DOfg;d\SsX(!(A)u^4(85`MLRBZ%Eqn7kHLrJ291:LOG6uOu"&\GFLn%pt5.A%Od=mcgj^l4_BYjSc7`TB34VQnQEoQuP\@""k2>+]^4[cm](`31UMr]VpJitL1?U-c-Eh.NSoY!EJ8G`u![k:u=U&uF5CS7"VV]c`%eMXK&S*f]R,:d7"$W6Z)Xr1U3rRC_nP$X=IlJ5I<O8*DP2QXOP=1@ENAc?KM^r3AKOddpq\nF7Tj/SGI=Y5'tE^*du8b9'FI8,kJ%U]7B3$ahRI200$f63m@73t5<mKEo7sUq#pag<bbsgZ<VigW3c+m2W)lI-i6iGCQe2k],#1WRkg1s(5UWC]BH3DkoU'B.$j!N%AP<%1Y0nL>bpX_[^'t!lBr=l`YNm?YlI.=fkmR$p:Y+ip>oA>Bp#DDUFdV$S]$]GR7+q6h=arSM]\t/JVY$B-TAg+gt'&O_>8qRq.7&c%3.giSU"=ee-5d`Up&1^(8Ir:ID2L8.D3G[TNGJ&4f?qpP:p6R'I%da_A21bA_l."P*1b9%>IJCOT5B#0*f[4!QsF\>\)o^&!kWC4%mdbhVbU%sV4m?^kV38o%$9quSTn6dFZM-/EC%#j4S:+PoEDtW#[GS,mR4#5o&[h=cS5c?,kNoZa_#(kDD)P#U77sL77B)>mMf%eE%lWIGTFOm1N8<E!&UFbkDhNAstT!:.U%'Z8f.QOtu<<K.mk6mDh*,>`1L$K^3Rq]P`e(N<mf2_k-3N+LYbO+e'b5Kt>VO(7*bfWu/%$D*KqXM&FG*$c7I"Q(CDEeXS8*UjVY\TCEKhl2:s6qu_)P%@R%YH4$"MaMlh\uj>N</Cj#J]e_`jXgE#$3$rQOupq=NMq*7]pOmf%fof=#DG_3%U*t=Ao4^c4ous1tX,^B\CJ,2]\m9coCkbN&eS=?E,&k9QDctLYl_tq,h%0Kuk_kf)q/)9+<aC/O-armFhR4g1.EC00%L:'k"X*"$=/0UHBk3H$5d'qVm?7\7EqffKDY5,e8U@N@g_7JO0XA7)?]j15To$u0Tn+ZRQ7^tMX?OUrC1::p1A`b*\*\mjCKp`Y*%WY/p.2FlcI,CFWF8[!-f7Yd-,DZ["<6M/U9&aPhp2m0]X(#[=4;1P_9i4)8)dM#0k?4"S%`f6r]FWJm+]7's8DVr=])1X#\Y*&Wf%E^YS6Q7=^2q:;8Perjbo)SB^75lFeoWS8"74@(/QnY;&?-<P=]oi`X!i?G\q]<(hGFuGAh]4AI/+]+"K,'T9U$lI9"2hj?&WrHO1%)t@u)Yq=oe`8DAF#-g1E51Cf&`.N'Lf`uCn\<Eo$Aja6I\_<ii`72`%<b32IQ=0iuDE3Z#c">3(nWQo=>8\oTVUA8>-F^PfU-!oK%Y*ilng'U:uq']/r#nnk-+[e=)+NIAG&ASU"/0R=EcW)3eJkp,C,;ohY;S"r&&m7h=W&q`a83:>i]J?"n>=8Z+85JqO648gESZN.q%p`5s`KV!B6<A"q7&S8qre9L*].j2'"4P.JXH?fa=B$YH8)U9qQX$Ej6fIV4l%8;@A9mgTS5-'KP:3&%"Ej-@uGV7hnoAAbJ/W.Qq%''l]$P_:-8:a0h`K7&gV8Cj>;Jr3A_c?..'P+dW+Z7\j)j!@,#=U&qI.6>,%1K=nnSLR,TM?Xi0;utn*`eW>;'nfZ56cuCNn!joD%Y:D1;Q2uVRi>c7:]NHRZmA*W]^(Idk7eg"_b=PEiaB7+u:$j[Q9X&DRRJ3E%.f^!fB)tH$6c$DHcqaF4)3H74/L9J](>Q)=[T#Bc%+1YaF@KV!9?5W:uluURS9CRR*/SF<1_2UIK!07ph0928jaD2taqon&M:&$e:C&n.qc;R2W0bm2>WbaQjV.7e4%=?5##d@r7@?e09%2O'X>\:V1P;K)51Oo!G+;Gl>h`I2QG*U'IS@JFlg0WgCJfiQ&Y:hUN6;U`+Ia_fL)k`1EK=4iR9Xfe:Q9rh\E8k')*-Jk0g<sg9t%iG\PJ)'V@7ptE8,\Pe5NR1ed[>h+M8OI*PuT5Reo:f+s(Ac.^O0^s"n'"FQ*kAH$1dAmQI>^&8fFKK&8o(OA\5["<@oG,NuZF"!f%V#^rmO/pVJ\-KA5kY&?o$f78CH)/Mff-R7R<p2R?+8D@"WKG8PM*V@`fT>/r<@Yq1!%h.mEc@:*j)H[Z5pfu\`t;HW9(f!gKK/-c%'Q3UWY/r+(LSMFL$*m+iF[`OG!Ad1-HK7N[U,C`b]o+",X'2re>1/F]6kPK`RPW,sa[LtUTWt>l8F"[kn\quBB`&-l@RuH7nea'\%,g@ZYFbNY?KE`;UdeL[`^F@&p2*=fRZ34p9UmWAZ+`+l_4L,qqjrR!<3o2Ragf*+*cmoDQ'c5"6,ub'ZX!gtPo1[;T[)H5$\e.YJ%N2k]>_\1HM+I>]=7">ai_!,U-gFO`P(S9-[UTOJ5Yb;]@6l1'i"Kn_YLTIRp0A;:)"e(DNdc#`FfjLe2Tu,s#,fN]<&&)9P8OZ9F%!bg8,c`P<Jhi;d5]5X_D!?emRh[KU0*qG]U\%=6FL@\6fX6u="[e/\IIJ\/;2f<ZqX7O+I._iGo)mJ.irfP,69=Vf8kN'/QYbZc)%p:acg_DhJBd)3/,\%5So:a7R,Z_:6^T^UoY[jBjoB6mm,5PMLX0Al3\O&<LrHhh>kT5X0lj]GfmEt%b@Nun&4b/T2_%`W&C]t8$%%e>&iVMmpmu*]@R^?<Vr!jSf%C-(V93l>bAG_,j!2]\M,W)o$!^<H7\Woa4=O/[fcJjrlc2qn"XtB3iAi,(#-M_O54a7;Vs^Bb8V2%($I3Lr$q@7'h[@@*p^sh_S3F[iHJBa"]*_+U0_;oS,Na+1jGLE(i2;F1!gCT`VV2tX;Nj,*Bq3k02`2EB\<:;:ueaOWQ=OSIUd$l%@=*?>9+lp#bgNge25Oob^m+Q"jJ@Q9^0HAJoifI<9.q(LQesA6UMGo4S<en?a2cC%DG.]XT'CUOj2iApIJJ=V5?I._W.pq4EiHPB%[a_#$,=LgGZ#[!c&+o*piN]Hu4'o+:FOm4`(Q8%2n!4CgiocYOa:TiAo!mG[U_D<8]j.t:HaWJ,]D[/q*Ll!t`dWhMAm53D;_PO1%cHdj9hGtETBG5DF;Krq;f<\$f.se.3=Hh:=LYYt=/W%GWp!tp`I_UkANeJf]r'cq^S^Sh"aYq^9d;kbKT2a)HT!.&hjV!A2&Sj@/%%`2bAo@=]"=g;1D9HAch,_S%;RH"E`,O4Lb'NI+Xb6fDP$moPAE$p][AJ!PWmpeaJ@s71pgB(l*aCt@]c%Rad'dp6m5sGHS&0F<?%0$m"!j@%4c;K-8&TIaKI]Fft/:eP*fn2m.nO*1]8[kImsK\:RcJs&H"Unr9T*?GMJ_C*7";Lo%4=:cM[&H\%c;Hg<TYb>lBJ%DI;%QfSXh/VFjpVB_hp3<b5jL8S%:(QmgQKj9BEKM56.XS@SgY(Mq*X5_T0+XRU=f_U]Kh-GQ.^nD'0I-8t053G[%?B#;06daNbZ/]pS%`rgRFi_b=b"KmLW/<(W+_DJU@MuiSS[9uI$(l\ZV-tD'ZJ:r-$'%JRRQ><G%We<]1SP_0_[1ioX)a87'k&cb(Be)!)`ChXpQf@M'%LXMSHJdAQB"L';,mVOPu+5_PLi!ZM5VLuIP6`/Aq.ffbC$o[Z%S+/Qp4iEQ"BjKb`MAh^`p`pg+5>L!!!r.X"I_N4USlOXid@!XX%s's[eL08>Bk)-:??%H/akW4GgQOp*+%GS")Y@1h`E$=s_;\9NS<uZo-M)HrA.E4V'`K"'Gee70XQ2/,KS*JlbqqB;a\Q+]Jlm"*\%jKgL*OODEN>XHJt(sPgYYlkD6f,=Go'4!Dk+;d8<o]fu[S?gnXfOR'/8d/:RaZS)^7V!_Z%;1eEAP"0ZO-(ds:nf>TE6!*c$WJ&n%+b\KOC'?WiSOH")(',%";j?DN:I/AGSCCFMG64tN3P6B&ZWK'9h_KBfM)H3i8Zk$A,!8f;HU[AgXH<_tqttS)J`^-@'/`/9a$_]/%'0$Rkl0]D^H[9Km(BrJKji@lD6^+Rl.)`eH861ra@3gn?_@DYZ,4qVaN,Vfh[6S-qU.\t+\rI<8YK`tIe.F.R7BHtDo2,!8AC#n'%73i'6$D`@7[g0MppH.Di>-U7(TkItN/F<,pcZX^Q,b<;r3&%#QS(lbMX:nl1XEXtrX+_@EUoSe^Yh(c@iO<^'9,<O?QuDSLc0&+A%;#._kkfa>n&=)Bh)%N"0*Ou<6g[V'ETH,7q0Lr!H]sR](7:CdLlM<2TDITRI5#\4<m$\nNM]t))U140[:%*(+SOkNAHc\SR,eO?E%:MgEc1]g6s,gU.k&/_B213K6N!)sH:3tpkXBL>n@?PX_D%dCHp"GaF5et@()l1stokB>jlAJ)Tl"hk8JQq<J`IKU$q_eS)7kn::/%6:H7ZO77E925,nkEp__8.lY[Alp*#21PWIk%c=B09r)i,A12rdROO/OktHb)]f()PD,F0RHI;CJAmO:"e/1s.qM$4l=86"CQ;98m%bVX%.17[td?r%a-dAj]R5cEF>,#Ypg!Vk7<as!JIHS=h@UF[p`,%2neUlnqN"EKd=PR)<Rf73-+\bNeHOWZd`^t'5GTbrm5U*mdk%G0R]@DVr,_!/4NM1,Ab9RUQaMXE1up$a/.TZ2`$*[C/%H*J=LY(h:)FK<p"+A2WQ7m;Wk6WYLdL@kRffrS[dl[Yg/Sn.EEKa#SF_%,c)$K_$gG?b'Df%#%iuVT$K>jYpuTtRY[&e2Bm5*O%(ODL\s:s,g5>WVFCEnAl-f^#k6%qnr(1"8qJKfdh/H/pf#Chd3l`VWKYkl%\.'4\=h+=@LA,",5[&FMSp,K<6"@!)/GB7pV[pK8m4X_)9#C`NRprJ.=%d1'P'U\-`)"IU=p3m]GNt!^A++]bKNn&UOb^dMpnMD`%gpDNZ[_a5O_W'?arU"OSZeUo&%steU`Tqn/1@239OtZrV7rM\rWb3.#_r)J<b0r9Zl51knrD0Yr$scn-m+a@R*-piW#P=Y!k3Ql,%mHD?9`0X1*pjStUr:%%*Ci*(h[$3=+!S_=brqkmUjlP`BfFlica1\M&7H8XZbM,/\>RcTj1IR;Im=&]8rEPSQb=$(mjo80Tn4r-P%_9Acuj)#'9#>X(G)Wc+eQUW$NkDa?mMZVja67R3j(bF\lgsp/R8om(HUpR5\$p;:%Z;:>UfZq8,\@4-,l&":+Bc.&og1ogrhfmkj%)\`)p&l%Z.$-6[p)IWnsQjVg@6-Z`k=j$!?'H7dk`P^W?%fG\FCNB2pC#rd%iSo>Eh:s'bYI/K%Qhr=d5?Z<Q?h<iq@;:)f5/03T%J#grAn,DpVDuS48mJm,,s7eg-pYDHkq!fI*iR9aCr:>,^pu0!dptbuHh`q&6kmr:?m\_-jJ+puJ&q^&?s'5Tqq%#^hn>H<`Y<W$U%q+q%^?iM46lR2GghgG$Vs7BY^r>VLlb@L~>%AI9_PrivateDataEnd